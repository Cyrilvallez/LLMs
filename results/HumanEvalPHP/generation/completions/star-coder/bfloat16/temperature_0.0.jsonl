{"task_id": "HumanEval/0", "completion": "\n    $numbers = array_unique($numbers);\n    $count = count($numbers);\n    for ($i = 0; $i < $count; $i++) {\n        for ($j = $i + 1; $j < $count; $j++) {\n            if (abs($numbers[$i] - $numbers[$j]) < $threshold) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "HumanEval/1", "completion": "\n    $paren_string = str_replace(\" \", \"\", $paren_string);\n    $paren_string = str_replace(\"(\", \" ( \", $paren_string);\n    $paren_string = str_replace(\")\", \" ) \", $paren_string);\n    $paren_string = explode(\" \", $paren_string);\n    $paren_string = array_filter($paren_string);\n    $paren_string = array_values($paren_string);\n    return $paren_string;\n}\n"}
{"task_id": "HumanEval/2", "completion": "\n    return $number - floor($number);\n}\n"}
{"task_id": "HumanEval/3", "completion": "\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance += $operation;\n        if ($balance < 0) {\n            return true;\n        }\n    }\n    return false;\n}\n"}
{"task_id": "HumanEval/4", "completion": "\n    $mean = array_sum($numbers) / count($numbers);\n    $deviations = array_map(function($x) use ($mean) {\n        return abs($x - $mean);\n    }, $numbers);\n    return array_sum($deviations) / count($deviations);\n}\n"}
{"task_id": "HumanEval/5", "completion": "\n    $result = array();\n    foreach ($numbers as $number) {\n        $result[] = $number;\n        $result[] = $delimeter;\n    }\n    array_pop($result);\n    return $result;\n}\n"}
{"task_id": "HumanEval/6", "completion": "\n    $max_depth = 0;\n    $depth = 0;\n    $paren_string = str_replace(\"(\", \" ( \", $paren_string);\n    $paren_string = str_replace(\")\", \" ) \", $paren_string);\n    $paren_string = str_replace(\"  \", \" \", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"( \", \"(\", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"(\", \" ( \", $paren_string);\n    $paren_string = str_replace(\")\", \" ) \", $paren_string);\n    $paren_string = str_replace(\"  \", \" \", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"( \", \"(\", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"(\", \" ( \", $paren_string);\n    $paren_string = str_replace(\")\", \" ) \", $paren_string);\n    $paren_string = str_replace(\"  \", \" \", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"( \", \"(\", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"(\", \" ( \", $paren_string);\n    $paren_string = str_replace(\")\", \" ) \", $paren_string);\n    $paren_string = str_replace(\"  \", \" \", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"( \", \"(\", $paren_string);\n    $paren_string = str_replace(\" )\", \")\", $paren_string);\n    $paren_string = str_replace(\"(\", \" ( \", $paren_string);\n    $paren_string = str_replace(\")\", \" ) \", $paren_string);\n    $paren_string ="}
{"task_id": "HumanEval/7", "completion": "\n    $result = array();\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)!== false) {\n            $result[] = $string;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/8", "completion": "\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n}\n"}
{"task_id": "HumanEval/9", "completion": "\n    $max = array_fill(0, count($numbers), 0);\n    $max[0] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        $max[$i] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n"}
{"task_id": "HumanEval/10", "completion": "\n    $len = strlen($string);\n    $i = $len - 1;\n    while ($i >= 0 && $string[$i] == $string[0]) {\n        $i--;\n    }\n    $i++;\n    return $string. substr($string, 0, $len - $i). strrev(substr($string, $i));\n}\n"}
{"task_id": "HumanEval/11", "completion": "\n    $len = max(strlen($a), strlen($b));\n    $a = str_pad($a, $len, '0');\n    $b = str_pad($b, $len, '0');\n    $result = '';\n    for ($i = 0; $i < $len; $i++) {\n        $result.= $a[$i] == $b[$i]? '0' : '1';\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/12", "completion": "\n    $longest = null;\n    $longest_length = 0;\n    foreach ($strings as $string) {\n        $string_length = strlen($string);\n        if ($string_length > $longest_length) {\n            $longest = $string;\n            $longest_length = $string_length;\n        }\n    }\n    return $longest;\n}\n"}
{"task_id": "HumanEval/13", "completion": "\n    if ($a < $b) {\n        list($a, $b) = array($b, $a);\n    }\n    while ($b > 0) {\n        $a %= $b;\n        list($a, $b) = array($b, $a);\n    }\n    return $a;\n}\n"}
{"task_id": "HumanEval/14", "completion": "\n    $prefixes = array();\n    for ($i = 0; $i <= strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i);\n    }\n    return $prefixes;\n}\n"}
{"task_id": "HumanEval/15", "completion": "\n    $result = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $result.= \"$i \";\n    }\n    return rtrim($result);\n}\n"}
{"task_id": "HumanEval/16", "completion": "\n    $string = str_replace(\" \", \"\", $string);\n    $string = str_replace(\"-\", \"\", $string);\n    $string = str_replace(\"_\", \"\", $string);\n    $string = str_replace(\".\", \"\", $string);\n    $string = str_replace(\",\", \"\", $string);\n    $string = str_replace(\"'\", \"\", $string);\n    $string = str_replace(\"\\\"\", \"\", $string);\n    $string = str_replace(\"!\", \"\", $string);\n    $string = str_replace(\"?\", \"\", $string);\n    $string = str_replace(\":\", \"\", $string);\n    $string = str_replace(\";\", \"\", $string);\n    $string = str_replace(\"(\", \"\", $string);\n    $string = str_replace(\")\", \"\", $string);\n    $string = str_replace(\"[\", \"\", $string);\n    $string = str_replace(\"]\", \"\", $string);\n    $string = str_replace(\"{\", \"\", $string);\n    $string = str_replace(\"}\", \"\", $string);\n    $string = str_replace(\"|\", \"\", $string);\n    $string = str_replace(\"/\", \"\", $string);\n    $string = str_replace(\"=\", \"\", $string);\n    $string = str_replace(\"+\", \"\", $string);\n    $string = str_replace(\"*\", \"\", $string);\n    $string = str_replace(\"&\", \"\", $string);\n    $string = str_replace(\"%\", \"\", $string);\n    $string = str_replace(\"$\", \"\", $string);\n    $string = str_replace(\"#\", \"\", $string);\n    $string = str_replace(\"@\", \"\", $string);\n    $string = str_replace(\"~\", \"\", $string);\n    $string = str_replace(\"^\", \"\", $string);\n    $string = str_replace(\"`\", \"\", $string);\n    $string = str_replace(\"<\", \"\", $string);\n    $string = str_replace(\">\", \"\", $string);\n    $string = str_replace(\"\u00a3\", \"\", $string);\n    $string = str_replace(\"\u00a5\", \"\", $string);\n    $string = str_replace(\"\u20ac\", \"\", $string);\n    $string = str_replace(\"\u00a2\", \"\", $string);\n    $string = str_replace(\"\u20b9\", \"\", $string);\n    $string = str_replace(\"\u20bd\", \"\", $string);\n    $string = str_replace(\""}
{"task_id": "HumanEval/17", "completion": "\n    $music_array = explode(\" \", $music_string);\n    $result = [];\n    foreach ($music_array as $note) {\n        if ($note == \"o\") {\n            $result[] = 4;\n        } elseif ($note == \"o|\") {\n            $result[] = 2;\n        } elseif ($note == \".|\") {\n            $result[] = 1;\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/18", "completion": "\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length) == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"}
{"task_id": "HumanEval/19", "completion": "\n    $numbers = explode(\" \", $numbers);\n    $numbers = array_map(function($number) {\n        return intval($number);\n    }, $numbers);\n    sort($numbers);\n    return implode(\" \", $numbers);\n}"}
{"task_id": "HumanEval/20", "completion": "\n    $closest = array();\n    $closest[0] = $numbers[0];\n    $closest[1] = $numbers[1];\n    $closest_distance = abs($numbers[0] - $numbers[1]);\n    for ($i = 0; $i < count($numbers); $i++) {\n        for ($j = $i + 1; $j < count($numbers); $j++) {\n            $distance = abs($numbers[$i] - $numbers[$j]);\n            if ($distance < $closest_distance) {\n                $closest[0] = $numbers[$i];\n                $closest[1] = $numbers[$j];\n                $closest_distance = $distance;\n            }\n        }\n    }\n    return $closest;\n}\n"}
{"task_id": "HumanEval/21", "completion": "\n    $min = min($numbers);\n    $max = max($numbers);\n    $range = $max - $min;\n    $scaled = array();\n    foreach ($numbers as $number) {\n        $scaled[] = ($number - $min) / $range;\n    }\n    return $scaled;\n}\n"}
{"task_id": "HumanEval/22", "completion": "\n    return array_filter($values, function($value) {\n        return is_int($value);\n    });\n}\n"}
{"task_id": "HumanEval/23", "completion": "\n    return strlen($string);\n}\n"}
{"task_id": "HumanEval/24", "completion": "\n    $divisor = 2;\n    while ($n % $divisor!= 0) {\n        $divisor++;\n    }\n    return $divisor - 1;\n}\n"}
{"task_id": "HumanEval/25", "completion": "\n    $factors = array();\n    $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n        }\n    }\n    return $factors;\n}\n"}
{"task_id": "HumanEval/26", "completion": "\n    $unique = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number, $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return $unique;\n}\n"}
{"task_id": "HumanEval/27", "completion": "\n    return strtr($string, \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", \"abcdefghijklmnopqrstuvwxyz\");\n}\n"}
{"task_id": "HumanEval/28", "completion": "\n    $result = \"\";\n    foreach ($strings as $string) {\n        $result.= $string;\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/29", "completion": "\n    return array_filter($strings, function($string) use ($prefix) {\n        return strpos($string, $prefix) === 0;\n    });\n}\n"}
{"task_id": "HumanEval/30", "completion": "\n    $r = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n            $r[] = $v;\n        }\n    }\n    return $r;\n}\n"}
{"task_id": "HumanEval/31", "completion": "\n    if ($n == 1) {\n        return false;\n    }\n    if ($n == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n    $max = ceil(sqrt($n));\n    for ($i = 3; $i <= $max; $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "HumanEval/33", "completion": "\n    $l_prime = array();\n    for ($i = 0; $i < count($l); $i++) {\n        if ($i % 3 == 0) {\n            $l_prime[] = $l[$i];\n        }\n    }\n    for ($i = 0; $i < count($l); $i++) {\n        if ($i % 3!= 0) {\n            $l_prime[] = $l[$i];\n        }\n    }\n    return $l_prime;\n}\n"}
{"task_id": "HumanEval/34", "completion": "\n    $l = array_unique($l);\n    sort($l);\n    return $l;\n}\n"}
{"task_id": "HumanEval/35", "completion": "\n    $max = $l[0];\n    foreach ($l as $v) {\n        if ($v > $max) {\n            $max = $v;\n        }\n    }\n    return $max;\n}\n"}
{"task_id": "HumanEval/36", "completion": "\n    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/37", "completion": "\n    $l_prime = array();\n    for ($i = 0; $i < count($l); $i++) {\n        if ($i % 2 == 0) {\n            $l_prime[] = $l[$i];\n        } else {\n            $l_prime[] = $l[$i - 1];\n        }\n    }\n    return $l_prime;\n}\n"}
{"task_id": "HumanEval/39", "completion": "\n    $fib = [1, 1];\n    for ($i = 2; $i < $n; $i++) {\n        $fib[] = $fib[$i - 1] + $fib[$i - 2];\n    }\n    $fib = array_slice($fib, 0, $n);\n    $primes = array_filter(array_map('is_prime', $fib));\n    return $fib[$primes[$n - 1]];\n}\n"}
{"task_id": "HumanEval/40", "completion": "\n    $l = array_unique($l);\n    $l = array_filter($l, function($x) { return $x!= 0; });\n    $l = array_values($l);\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n"}
{"task_id": "HumanEval/41", "completion": "\n    $left = 0;\n    $right = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $left += 1;\n        $right -= 1;\n    }\n    return abs($left - $right);\n}\n"}
{"task_id": "HumanEval/42", "completion": "\n    $ret = array();\n    foreach ($l as $v) {\n        $ret[] = $v + 1;\n    }\n    return $ret;\n}\n"}
{"task_id": "HumanEval/43", "completion": "\n    $s = array_sum($l);\n    if ($s == 0) {\n        return false;\n    }\n    $seen = array();\n    foreach ($l as $v) {\n        $t = $s - $v;\n        if (isset($seen[$t])) {\n            return true;\n        }\n        $seen[$v] = true;\n    }\n    return false;\n}\n"}
{"task_id": "HumanEval/44", "completion": "\n    $digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    $result = \"\";\n    while ($x > 0) {\n        $result = $digits[$x % $base]. $result;\n        $x = floor($x / $base);\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/45", "completion": "\n    return ($a * $h) / 2;\n}\n"}
{"task_id": "HumanEval/46", "completion": "\n    $fib4 = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4[] = $fib4[$i - 1] + $fib4[$i - 2] + $fib4[$i - 3] + $fib4[$i - 4];\n    }\n    return $fib4[$n];\n}\n"}
{"task_id": "HumanEval/47", "completion": "\n    $l = array_values(array_filter(array_map('floatval', $l)));\n    $l = array_merge($l, array_reverse($l));\n    $l = array_values(array_filter(array_map('floatval', $l)));\n    $l = array_slice($l, floor(count($l) / 2), 2);\n    return count($l) == 1? $l[0] : ($l[0] + $l[1]) / 2;\n}\n"}
{"task_id": "HumanEval/48", "completion": "\n    $text = str_replace(\" \", \"\", $text);\n    $text = str_replace(\".\", \"\", $text);\n    $text = str_replace(\",\", \"\", $text);\n    $text = str_replace(\"!\", \"\", $text);\n    $text = str_replace(\"?\", \"\", $text);\n    $text = str_replace(\":\", \"\", $text);\n    $text = str_replace(\";\", \"\", $text);\n    $text = str_replace(\"(\", \"\", $text);\n    $text = str_replace(\")\", \"\", $text);\n    $text = str_replace(\"[\", \"\", $text);\n    $text = str_replace(\"]\", \"\", $text);\n    $text = str_replace(\"{\", \"\", $text);\n    $text = str_replace(\"}\", \"\", $text);\n    $text = str_replace(\"'\", \"\", $text);\n    $text = str_replace(\"\\\"\", \"\", $text);\n    $text = str_replace(\"/\", \"\", $text);\n    $text = str_replace(\"\\\\\", \"\", $text);\n    $text = str_replace(\"-\", \"\", $text);\n    $text = str_replace(\"_\", \"\", $text);\n    $text = str_replace(\"=\", \"\", $text);\n    $text = str_replace(\"+\", \"\", $text);\n    $text = str_replace(\"*\", \"\", $text);\n    $text = str_replace(\"&\", \"\", $text);\n    $text = str_replace(\"%\", \"\", $text);\n    $text = str_replace(\"$\", \"\", $text);\n    $text = str_replace(\"#\", \"\", $text);\n    $text = str_replace(\"@\", \"\", $text);\n    $text = str_replace(\"`\", \"\", $text);\n    $text = str_replace(\"~\", \"\", $text);\n    $text = str_replace(\"^\", \"\", $text);\n    $text = str_replace(\"|\", \"\", $text);\n    $text = str_replace(\"0\", \"\", $text);\n    $text = str_replace(\"1\", \"\", $text);\n    $text = str_replace(\"2\", \"\", $text);\n    $text = str_replace(\"3\", \"\", $text);\n    $text = str_replace(\"4\", \"\", $text);\n    $text = str_replace(\"5\", \"\", $text);\n    $text = str_replace(\"6\", \"\", $text);\n    $text = str_replace(\"7\", \"\", $text"}
{"task_id": "HumanEval/49", "completion": "\n    $n = (int)$n;\n    $p = (int)$p;\n    if ($n < 0) {\n        $n = $n % $p;\n    }\n    if ($n < 0) {\n        $n = $n + $p;\n    }\n    return $n;\n}\n"}
{"task_id": "HumanEval/51", "completion": "\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $new_text = \"\";\n    for ($i = 0; $i < strlen($text); $i++) {\n        if (!in_array($text[$i], $vowels)) {\n            $new_text.= $text[$i];\n        }\n    }\n    return $new_text;\n}\n"}
{"task_id": "HumanEval/52", "completion": "\n    foreach ($l as $i) {\n        if ($i > $t) {\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "HumanEval/53", "completion": "\n    return $x + $y;\n}\n"}
{"task_id": "HumanEval/54", "completion": "\n    $s0 = str_split($s0);\n    $s1 = str_split($s1);\n    $s0 = array_unique($s0);\n    $s1 = array_unique($s1);\n    if (count($s0)!= count($s1)) {\n        return false;\n    }\n    foreach ($s0 as $char) {\n        if (!in_array($char, $s1)) {\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "HumanEval/55", "completion": "\n    if ($n < 2) {\n        return $n;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n"}
{"task_id": "HumanEval/56", "completion": "\n    $stack = array();\n    for ($i = 0; $i < strlen($brackets); $i++) {\n        if ($brackets[$i] == \"<\") {\n            array_push($stack, $brackets[$i]);\n        } else {\n            if (count($stack) == 0) {\n                return false;\n            }\n            array_pop($stack);\n        }\n    }\n    return count($stack) == 0;\n}"}
{"task_id": "HumanEval/57", "completion": "\n    $l = array_values($l);\n    $n = count($l);\n    if ($n < 3) {\n        return true;\n    }\n    $inc = $l[1] > $l[0];\n    for ($i = 2; $i < $n; $i++) {\n        if ($inc!= ($l[$i] > $l[$i - 1])) {\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "HumanEval/58", "completion": "\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $res = array();\n    foreach ($l1 as $v) {\n        if (in_array($v, $l2)) {\n            $res[] = $v;\n        }\n    }\n    return $res;\n}\n"}
{"task_id": "HumanEval/59", "completion": "\n    $i = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i == 0) {\n            $n = $n / $i;\n        } else {\n            $i++;\n        }\n    }\n    return $n;\n}\n"}
{"task_id": "HumanEval/60", "completion": "\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/61", "completion": "\n    $stack = array();\n    for ($i = 0; $i < strlen($brackets); $i++) {\n        if ($brackets[$i] == '(') {\n            array_push($stack, '(');\n        } else {\n            if (count($stack) == 0) {\n                return false;\n            }\n            array_pop($stack);\n        }\n    }\n    return count($stack) == 0;\n}"}
{"task_id": "HumanEval/62", "completion": "\n    $ys = array();\n    for ($i = 1; $i < count($xs); $i++) {\n        $ys[] = $i * $xs[$i];\n    }\n    return $ys;\n}\n"}
{"task_id": "HumanEval/63", "completion": "\n    if ($n < 3) {\n        return $n;\n    }\n    $a = 0;\n    $b = 1;\n    $c = 1;\n    for ($i = 3; $i <= $n; $i++) {\n        $a = $b;\n        $b = $c;\n        $c = $a + $b;\n    }\n    return $c;\n}"}
{"task_id": "HumanEval/64", "completion": "\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $vowels)) {\n            $count++;\n        }\n    }\n    if (in_array('y', $vowels) && $s[strlen($s) - 1] == 'y') {\n        $count++;\n    }\n    return $count;\n}\n"}
{"task_id": "HumanEval/65", "completion": "\n    $x = strval($x);\n    $shift = intval($shift);\n    $len = strlen($x);\n    if ($shift > $len) {\n        $shift = $shift % $len;\n    }\n    return substr($x, $shift). substr($x, 0, $shift);\n}\n"}
{"task_id": "HumanEval/66", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ord($s[$i]) >= 65 && ord($s[$i]) <= 90) {\n            $sum += ord($s[$i]);\n        }\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/67", "completion": "\n    $s = explode(\" \", $s);\n    $apples = $s[0];\n    $oranges = $s[2];\n    $mango = $n - $apples - $oranges;\n    return $mango;\n}"}
{"task_id": "HumanEval/68", "completion": "\n    $even = array_filter($arr, function($v) {\n        return $v % 2 == 0;\n    });\n    if (empty($even)) {\n        return [];\n    }\n    $min = min($even);\n    $min_index = array_search($min, $arr);\n    return [$min, $min_index];\n}\n"}
{"task_id": "HumanEval/69", "completion": "\n    $max = 0;\n    $max_index = 0;\n    $max_count = 0;\n    foreach ($lst as $index => $value) {\n        if ($value > $max) {\n            $max = $value;\n            $max_index = $index;\n            $max_count = 1;\n        } elseif ($value == $max) {\n            $max_count++;\n        }\n    }\n    if ($max_count >= $max) {\n        return $max;\n    } else {\n        return -1;\n    }\n}\n"}
{"task_id": "HumanEval/70", "completion": "\n    $len = count($lst);\n    if ($len == 0) {\n        return $lst;\n    }\n    $min = $lst[0];\n    $max = $lst[0];\n    for ($i = 1; $i < $len; $i++) {\n        if ($lst[$i] < $min) {\n            $min = $lst[$i];\n        }\n        if ($lst[$i] > $max) {\n            $max = $lst[$i];\n        }\n    }\n    $result = array();\n    $result[] = $min;\n    $result[] = $max;\n    for ($i = 0; $i < $len; $i++) {\n        if ($lst[$i]!= $min && $lst[$i]!= $max) {\n            $result[] = $lst[$i];\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/71", "completion": "\n    if ($a + $b > $c && $a + $c > $b && $b + $c > $a) {\n        $s = ($a + $b + $c) / 2;\n        return round(sqrt($s * ($s - $a) * ($s - $b) * ($s - $c)), 2);\n    } else {\n        return -1;\n    }\n}\n"}
{"task_id": "HumanEval/72", "completion": "\n    $q = array_values(array_unique(array_map('abs', $q)));\n    if (count($q) == 1) {\n        return $q[0] <= $w;\n    }\n    $sum = array_sum($q);\n    if ($sum > $w) {\n        return false;\n    }\n    $left = $right = 0;\n    while ($left < count($q) && $right < count($q)) {\n        if ($q[$left] + $q[$right] <= $w) {\n            $left++;\n        }\n        $right++;\n    }\n    return $left == count($q);\n}"}
{"task_id": "HumanEval/73", "completion": "\n    $arr = array_unique($arr);\n    $count = 0;\n    $len = count($arr);\n    for ($i = 0; $i < $len; $i++) {\n        $j = $len - $i - 1;\n        if ($arr[$i]!= $arr[$j]) {\n            $count++;\n            if ($count > 1) {\n                return -1;\n            }\n            $arr[$i] = $arr[$j];\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/74", "completion": "\n    $total1 = 0;\n    $total2 = 0;\n    $result = array();\n    for ($i = 0; $i < count($lst1); $i++) {\n        $total1 += strlen($lst1[$i]);\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        $total2 += strlen($lst2[$i]);\n    }\n    if ($total1 < $total2) {\n        return $lst1;\n    } else if ($total1 > $total2) {\n        return $lst2;\n    } else {\n        return $lst1;\n    }\n}"}
{"task_id": "HumanEval/75", "completion": "\n    $prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29];\n    $prime_numbers_count = count($prime_numbers);\n    $prime_numbers_sum = array_sum($prime_numbers);\n    $prime_numbers_sum_sqrt = sqrt($prime_numbers_sum);\n    $prime_numbers_sum_sqrt_floor = floor($prime_numbers_sum_sqrt);\n    $prime_numbers_sum_sqrt_ceil = ceil($prime_numbers_sum_sqrt);\n    $prime_numbers_sum_sqrt_floor_is_prime = in_array($prime_numbers_sum_sqrt_floor, $prime_numbers);\n    $prime_numbers_sum_sqrt_ceil_is_prime = in_array($prime_numbers_sum_sqrt_ceil, $prime_numbers);\n    if ($prime_numbers_sum_sqrt_floor_is_prime && $prime_numbers_sum_sqrt_ceil_is_prime) {\n        $prime_numbers_sum_sqrt_floor_index = array_search($prime_numbers_sum_sqrt_floor, $prime_numbers);\n        $prime_numbers_sum_sqrt_ceil_index = array_search($prime_numbers_sum_sqrt_ceil, $prime_numbers);\n        $prime_numbers_sum_sqrt_floor_index_is_prime = $prime_numbers_sum_sqrt_floor_index < $prime_numbers_count;\n        $prime_numbers_sum_sqrt_ceil_index_is_prime = $prime_numbers_sum_sqrt_ceil_index < $prime_numbers_count;\n        if ($prime_numbers_sum_sqrt_floor_index_is_prime && $prime_numbers_sum_sqrt_ceil_index_is_prime) {\n            $prime_numbers_sum_sqrt_floor_index_is_prime = $prime_numbers_sum_sqrt_floor_index < $prime_numbers_sum_sqrt_ceil_index;\n            $prime_numbers_sum_sqrt_ceil_index_is_prime = $prime_numbers_sum_sqrt_ceil_index < $prime_numbers_sum_sqrt_floor_index;\n            if ($prime_numbers_sum"}
{"task_id": "HumanEval/76", "completion": "\n    if ($n == 1) {\n        return false;\n    }\n    if ($x == 1) {\n        return true;\n    }\n    if ($x == 0) {\n        return false;\n    }\n    $x = log($x, $n);\n    $x = floor($x);\n    if ($x == $x) {\n        return true;\n    }\n    return false;\n}"}
{"task_id": "HumanEval/77", "completion": "\n    $a = abs($a);\n    $c = round(pow($a, 1/3));\n    return $c*$c*$c == $a;\n}"}
{"task_id": "HumanEval/78", "completion": "\n    $num = strtoupper($num);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        $char = $num[$i];\n        if ($char == \"2\" || $char == \"3\" || $char == \"5\" || $char == \"7\" || $char == \"B\" || $char == \"D\") {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/79", "completion": "\n    $binary = decbin($decimal);\n    $binary = str_pad($binary, 8, '0', STR_PAD_LEFT);\n    return \"db\". $binary. \"db\";\n}\n"}
{"task_id": "HumanEval/80", "completion": "\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = array_slice($s, 0, 3);\n    $s = implode(\"\", $s);\n    $s = str_split($s);\n    $s = array_unique"}
{"task_id": "HumanEval/81", "completion": "\n    $grades = array_map(function($grade) {\n        return round($grade, 1);\n    }, $grades);\n    $grades = array_map(function($grade) {\n        if ($grade >= 4.0) {\n            return \"A+\";\n        } elseif ($grade >= 3.7) {\n            return \"A\";\n        } elseif ($grade >= 3.3) {\n            return \"A-\";\n        } elseif ($grade >= 3.0) {\n            return \"B+\";\n        } elseif ($grade >= 2.7) {\n            return \"B\";\n        } elseif ($grade >= 2.3) {\n            return \"B-\";\n        } elseif ($grade >= 2.0) {\n            return \"C+\";\n        } elseif ($grade >= 1.7) {\n            return \"C\";\n        } elseif ($grade >= 1.3) {\n            return \"C-\";\n        } elseif ($grade >= 1.0) {\n            return \"D+\";\n        } elseif ($grade >= 0.7) {\n            return \"D\";\n        } elseif ($grade >= 0.0) {\n            return \"D-\";\n        } else {\n            return \"E\";\n        }\n    }, $grades);\n    return $grades;\n}\n"}
{"task_id": "HumanEval/82", "completion": "\n    $length = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n}"}
{"task_id": "HumanEval/83", "completion": "\n    $count = 0;\n    for ($i = 1; $i < 10 ** $n; $i++) {\n        if (substr($i, 0, 1) == 1 || substr($i, -1, 1) == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho starts_one_ends(1);\necho starts_one_ends(2);\necho starts_one_ends(3);\necho starts_one_ends(4);\necho starts_one_ends(5);\necho starts_one_ends(6);\necho starts_one_ends(7);\necho starts_one_ends(8);\necho starts_one_ends(9);\necho starts_one_ends(10);\necho starts_one_ends(11);\necho starts_one_ends(12);\necho starts_one_ends(13);\necho starts_one_ends(14);\necho starts_one_ends(15);\necho starts_one_ends(16);\necho starts_one_ends(17);\necho starts_one_ends(18);\necho starts_one_ends(19);\necho starts_one_ends(20);\necho starts_one_ends(21);\necho starts_one_ends(22);\necho starts_one_ends(23);\necho starts_one_ends(24);\necho starts_one_ends(25);\necho starts_one_ends(26);\necho starts_one_ends(27);\necho starts_one_ends(28);\necho starts_one_ends(29);\necho starts_one_ends(30);\necho starts_one_ends(31);\necho starts_one_ends(32);\necho starts_one_ends(33);\necho starts_one_ends(34);\necho starts_one_ends(35);\necho starts_one_ends(36);\necho starts_one_ends(37);\necho starts_one_ends(38);\necho starts_one_ends(39);\necho starts_one_ends(40);\necho starts_"}
{"task_id": "HumanEval/84", "completion": "\n    $binary = decbin($N);\n    $sum = 0;\n    for ($i = 0; $i < strlen($binary); $i++) {\n        $sum += $binary[$i];\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/85", "completion": "\n    $sum = 0;\n    foreach ($lst as $key => $value) {\n        if ($key % 2 == 0) {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/86", "completion": "\n    $words = explode(\" \", $s);\n    $new_words = [];\n    foreach ($words as $word) {\n        $new_word = \"\";\n        for ($i = 0; $i < strlen($word); $i++) {\n            $new_word.= chr(ord($word[$i]) + $i);\n        }\n        $new_words[] = $new_word;\n    }\n    return implode(\" \", $new_words);\n}\n"}
{"task_id": "HumanEval/87", "completion": "\n    $result = array();\n    foreach ($lst as $i => $row) {\n        foreach ($row as $j => $col) {\n            if ($col == $x) {\n                $result[] = array($i, $j);\n            }\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/88", "completion": "\n    $sum = array_sum(array_slice($array, 0, 2));\n    if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        rsort($array);\n    }\n    return $array;\n}\n"}
{"task_id": "HumanEval/89", "completion": "\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $newAlphabet = str_split($alphabet);\n    $newAlphabet = array_slice($newAlphabet, 2) + array_slice($newAlphabet, 0, 2);\n    $newAlphabet = implode(\"\", $newAlphabet);\n    $newString = str_replace($alphabet, $newAlphabet, $s);\n    return $newString;\n}"}
{"task_id": "HumanEval/90", "completion": "\n    $smallest = null;\n    $smallest_index = null;\n    foreach ($lst as $index => $value) {\n        if ($smallest === null || $value < $smallest) {\n            $smallest = $value;\n            $smallest_index = $index;\n        }\n    }\n    if ($smallest_index === null) {\n        return null;\n    }\n    $smallest_index_2 = null;\n    foreach ($lst as $index => $value) {\n        if ($index!== $smallest_index && ($smallest_index_2 === null || $value < $lst[$smallest_index_2])) {\n            $smallest_index_2 = $index;\n        }\n    }\n    return $lst[$smallest_index_2];\n}"}
{"task_id": "HumanEval/91", "completion": "\n    $bored = 0;\n    $sentences = explode('.', $S);\n    foreach ($sentences as $sentence) {\n        $words = explode(' ', $sentence);\n        if (in_array('I', $words)) {\n            $bored++;\n        }\n    }\n    return $bored;\n}\n"}
{"task_id": "HumanEval/92", "completion": "\n    return (is_int($x) || is_int($y) || is_int($z)) && ($x + $y == $z || $x + $z == $y || $y + $z == $x);\n}"}
{"task_id": "HumanEval/93", "completion": "\n    $message = str_split($message);\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $encoded = array();\n    for ($i = 0; $i < count($message); $i++) {\n        if (in_array($message[$i], $vowels)) {\n            $encoded[] = $message[$i];\n        } else {\n            $encoded[] = strtoupper($message[$i]);\n        }\n    }\n    return join(\"\", $encoded);\n}"}
{"task_id": "HumanEval/94", "completion": "\n    $max = 0;\n    foreach ($lst as $num) {\n        if ($num > $max) {\n            $max = $num;\n        }\n    }\n    $sum = 0;\n    while ($max > 0) {\n        $sum += $max % 10;\n        $max = floor($max / 10);\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/95", "completion": "\n    $keys = array_keys($dict);\n    $first_key = $keys[0];\n    $first_key_type = gettype($first_key);\n    if ($first_key_type == \"string\") {\n        $first_key_case = strtoupper($first_key) == $first_key;\n        foreach ($keys as $key) {\n            $key_type = gettype($key);\n            if ($key_type!= \"string\") {\n                return false;\n            }\n            $key_case = strtoupper($key) == $key;\n            if ($key_case!= $first_key_case) {\n                return false;\n            }\n        }\n        return true;\n    }\n    return false;\n}"}
{"task_id": "HumanEval/96", "completion": "\n    $primes = array();\n    for ($i = 2; $i < $n; $i++) {\n        if (is_prime($i)) {\n            $primes[] = $i;\n        }\n    }\n    return $primes;\n}\n"}
{"task_id": "HumanEval/97", "completion": "\n    $a = (int) $a;\n    $b = (int) $b;\n    $a = str_split($a);\n    $b = str_split($b);\n    $a = array_map(function($x) { return (int) $x; }, $a);\n    $b = array_map(function($x) { return (int) $x; }, $b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n    return $a * $b;\n}"}
{"task_id": "HumanEval/98", "completion": "\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if ($i % 2 == 0 && strtoupper($s[$i]) == $s[$i]) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/99", "completion": "\n    $value = (int) $value;\n    return $value;\n}"}
{"task_id": "HumanEval/100", "completion": "\n    $pile = array();\n    for ($i = 0; $i < $n; $i++) {\n        $pile[] = $n;\n        if ($n % 2 == 0) {\n            $n = $n / 2;\n        } else {\n            $n = $n * 3 + 1;\n        }\n    }\n    return $pile;\n}\n"}
{"task_id": "HumanEval/101", "completion": "\n    return explode(',', $s);\n}\n"}
{"task_id": "HumanEval/102", "completion": "\n    $x = intval($x);\n    $y = intval($y);\n    $result = -1;\n    for ($i = $x; $i <= $y; $i++) {\n        if ($i % 2 == 0) {\n            $result = $i;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/103", "completion": "\n    if ($n > $m) {\n        return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $avg = round($avg);\n    return decbin($avg);\n}\n"}
{"task_id": "HumanEval/104", "completion": "\n    $result = array();\n    foreach ($x as $value) {\n        $digits = str_split($value);\n        if (count(array_intersect(array_map('is_even', $digits), [0, 1])) == 0) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/105", "completion": "\n    $result = array();\n    foreach ($arr as $value) {\n        if ($value >= 1 && $value <= 9) {\n            $result[] = $value;\n        }\n    }\n    $result = array_reverse($result);\n    $result = array_map(function($value) {\n        switch ($value) {\n            case 1:\n                return \"One\";\n            case 2:\n                return \"Two\";\n            case 3:\n                return \"Three\";\n            case 4:\n                return \"Four\";\n            case 5:\n                return \"Five\";\n            case 6:\n                return \"Six\";\n            case 7:\n                return \"Seven\";\n            case 8:\n                return \"Eight\";\n            case 9:\n                return \"Nine\";\n        }\n    }, $result);\n    return $result;\n}"}
{"task_id": "HumanEval/106", "completion": "\n    $result = array();\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[] = factorial($i);\n        } else {\n            $result[] = sum(range(1, $i));\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/107", "completion": "\n    $even = 0;\n    $odd = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $str = (string)$i;\n        if ($str == strrev($str)) {\n            if (strlen($str) % 2 == 0) {\n                $even++;\n            } else {\n                $odd++;\n            }\n        }\n    }\n    return [$even, $odd];\n}\n"}
{"task_id": "HumanEval/108", "completion": "\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/109", "completion": "\n    $n = count($arr);\n    if ($n == 0) {\n        return true;\n    }\n    $i = 0;\n    while ($i < $n - 1) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $arr[$i] = $arr[$i] ^ $arr[$i + 1];\n            $arr[$i + 1] = $arr[$i] ^ $arr[$i + 1];\n            $arr[$i] = $arr[$i] ^ $arr[$i + 1];\n            $i = 0;\n        } else {\n            $i++;\n        }\n    }\n    return true;\n}"}
{"task_id": "HumanEval/110", "completion": "\n    $lst1_even = array_filter($lst1, function($n) { return $n % 2 == 0; });\n    $lst2_even = array_filter($lst2, function($n) { return $n % 2 == 0; });\n    if (count($lst1_even) == count($lst2_even)) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n"}
{"task_id": "HumanEval/111", "completion": "\n    $histogram = array();\n    $test = explode(\" \", $test);\n    foreach ($test as $letter) {\n        if (array_key_exists($letter, $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}"}
{"task_id": "HumanEval/112", "completion": "\n    $s = str_split($s);\n    $c = str_split($c);\n    $result = [];\n    $isPalindrome = true;\n    foreach ($s as $char) {\n        if (in_array($char, $c)) {\n            unset($s[$s[0]]);\n        }\n    }\n    $s = array_values($s);\n    for ($i = 0; $i < count($s) / 2; $i++) {\n        if ($s[$i]!= $s[count($s) - 1 - $i]) {\n            $isPalindrome = false;\n        }\n    }\n    $result[] = implode(\"\", $s);\n    $result[] = $isPalindrome;\n    return $result;\n}\n"}
{"task_id": "HumanEval/113", "completion": "\n    $ret = array();\n    foreach ($lst as $str) {\n        $ret[] = \"the number of odd elements \". count(preg_split('/[^02468]/', $str, -1, PREG_SPLIT_NO_EMPTY)). \"n the str\". $str. \" of the \". $str. \"nput.\";\n    }\n    return $ret;\n}\n"}
{"task_id": "HumanEval/114", "completion": "\n    $sum = 0;\n    $min = 0;\n    $start = 0;\n    $end = 0;\n    $min_sum = 0;\n    $min_start = 0;\n    $min_end = 0;\n    $len = count($nums);\n    for ($i = 0; $i < $len; $i++) {\n        $sum += $nums[$i];\n        if ($sum < 0) {\n            $sum = 0;\n            $start = $i + 1;\n        }\n        if ($sum < $min_sum) {\n            $min_sum = $sum;\n            $min_start = $start;\n            $min_end = $i;\n        }\n    }\n    return $min_sum;\n}\n"}
{"task_id": "HumanEval/115", "completion": "\n    $buckets = array();\n    $rows = count($grid);\n    $cols = count($grid[0]);\n    $count = 0;\n    for ($i = 0; $i < $rows; $i++) {\n        for ($j = 0; $j < $cols; $j++) {\n            if ($grid[$i][$j] == 1) {\n                $buckets[] = array($i, $j);\n            }\n        }\n    }\n    $buckets = array_reverse($buckets);\n    while (count($buckets) > 0) {\n        $count++;\n        $bucket = array_pop($buckets);\n        $i = $bucket[0];\n        $j = $bucket[1];\n        if ($i > 0 && $grid[$i - 1][$j] == 0) {\n            $grid[$i - 1][$j] = 1;\n            $buckets[] = array($i - 1, $j);\n        }\n        if ($i < $rows - 1 && $grid[$i + 1][$j] == 0) {\n            $grid[$i + 1][$j] = 1;\n            $buckets[] = array($i + 1, $j);\n        }\n        if ($j > 0 && $grid[$i][$j - 1] == 0) {\n            $grid[$i][$j - 1] = 1;\n            $buckets[] = array($i, $j - 1);\n        }\n        if ($j < $cols - 1 && $grid[$i][$j + 1] == 0) {\n            $grid[$i][$j + 1] = 1;\n            $buckets[] = array($i, $j + 1);\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/116", "completion": "\n    $arr = array_map(function($n) {\n        return strrev(decbin($n));\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_replace('0', '2', $n);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_replace('1', '0', $n);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_replace('2', '1', $n);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return strrev($n);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return bindec($n);\n    }, $arr);\n    sort($arr);\n    return $arr;\n}\n"}
{"task_id": "HumanEval/117", "completion": "\n    $words = explode(\" \", $s);\n    $result = [];\n    foreach ($words as $word) {\n        $consonants = 0;\n        for ($i = 0; $i < strlen($word); $i++) {\n            if (ctype_alpha($word[$i])) {\n                if (ctype_upper($word[$i])) {\n                    $consonants++;\n                }\n            }\n        }\n        if ($consonants == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/118", "completion": "\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $vowel_found = false;\n    $closest_vowel = \"\";\n    $word_length = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_found = true;\n            $closest_vowel = $word[$i];\n            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i = $word_length - 1; $i >= 0; $i--) {\n            if (in_array($word[$i], $vowels) && $word[$i]!= $closest_vowel) {\n                $closest_vowel = $word[$i];\n                break;\n            }\n        }\n    }\n    return $closest_vowel;\n}"}
{"task_id": "HumanEval/119", "completion": "\n    $stack = array();\n    foreach ($lst as $char) {\n        if ($char == '(') {\n            array_push($stack, $char);\n        } else {\n            if (empty($stack)) {\n                return \"No\";\n            }\n            array_pop($stack);\n        }\n    }\n    return empty($stack)? \"Yes\" : \"No\";\n}\n"}
{"task_id": "HumanEval/120", "completion": "\n    $arr = array_slice($arr, 0, $k);\n    sort($arr);\n    return $arr;\n}\n"}
{"task_id": "HumanEval/121", "completion": "\n    $sum = 0;\n    foreach ($lst as $key => $value) {\n        if ($key % 2 == 0 && $value % 2!= 0) {\n            $sum += $value;\n        }\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/122", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        $sum += $arr[$i];\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/123", "completion": "\n    $result = array();\n    while ($n!= 1) {\n        if ($n % 2 == 0) {\n            $n = $n / 2;\n        } else {\n            $n = 3 * $n + 1;\n        }\n        $result[] = $n;\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/124", "completion": "\n    $date = explode(\"-\", $date);\n    if (count($date)!= 3) {\n        return false;\n    }\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n            return false;\n        }\n        if ($day < 1 || $day > 30) {\n            if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n                return false;\n            }\n            if ($day < 1 || $day > 29) {\n                if ($month == 2) {\n                    return false;\n                }\n            }\n        }\n    }\n    if ($year < 1900 || $year > 2020) {\n        return false;\n    }\n    return true;\n}"}
{"task_id": "HumanEval/125", "completion": "\n    // your code here\n}"}
{"task_id": "HumanEval/126", "completion": "\n    $prev = null;\n    foreach ($lst as $num) {\n        if ($prev!== null && $num < $prev) {\n            return false;\n        }\n        $prev = $num;\n    }\n    return true;\n}\n"}
{"task_id": "HumanEval/127", "completion": "\n    $start1 = $interval1[0];\n    $end1 = $interval1[1];\n    $start2 = $interval2[0];\n    $end2 = $interval2[1];\n    $intersection = array();\n    $intersection[0] = max($start1, $start2);\n    $intersection[1] = min($end1, $end2);\n    if ($intersection[0] > $intersection[1]) {\n        return \"NO\";\n    }\n    $length = $intersection[1] - $intersection[0] + 1;\n    if ($length == 1) {\n        return \"NO\";\n    }\n    if ($length == 2) {\n        return \"YES\";\n    }\n    if ($length == 3) {\n        return \"YES\";\n    }\n    if ($length == 4) {\n        return \"YES\";\n    }\n    if ($length == 5) {\n        return \"YES\";\n    }\n    if ($length == 6) {\n        return \"YES\";\n    }\n    if ($length == 7) {\n        return \"YES\";\n    }\n    if ($length == 8) {\n        return \"YES\";\n    }\n    if ($length == 9) {\n        return \"YES\";\n    }\n    if ($length == 10) {\n        return \"YES\";\n    }\n    if ($length == 11) {\n        return \"YES\";\n    }\n    if ($length == 12) {\n        return \"YES\";\n    }\n    if ($length == 13) {\n        return \"YES\";\n    }\n    if ($length == 14) {\n        return \"YES\";\n    }\n    if ($length == 15) {\n        return \"YES\";\n    }\n    if ($length == 16) {\n        return \"YES\";\n    }\n    if ($length == 17) {\n        return \"YES\";\n    }\n    if ($length == 18) {\n        return \"YES\";\n    }\n    if ($length == 19) {\n        return \"YES\";\n    }\n    if ($length == 20) {\n        return \"YES\";\n    }\n    if ($length == 21) {\n        return \"YES\";\n    }\n    if ($length == 22) {\n        return \"YES\";\n    }\n    if ($length == 23) {\n        return \"YES\";\n    }\n    if ($length == 24"}
{"task_id": "HumanEval/128", "completion": "\n    $sum = 0;\n    $product = 1;\n    foreach ($arr as $value) {\n        if ($value == 0) {\n            $sum += 0;\n            $product *= 0;\n        } elseif ($value > 0) {\n            $sum += $value;\n            $product *= 1;\n        } else {\n            $sum += abs($value);\n            $product *= -1;\n        }\n    }\n    return $sum * $product;\n}"}
{"task_id": "HumanEval/129", "completion": "\n    $n = count($grid);\n    $m = count($grid[0]);\n    $dp = array_fill(0, $n, array_fill(0, $m, array()));\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($i == 0 && $j == 0) {\n                $dp[$i][$j] = array($grid[$i][$j]);\n            } else if ($i == 0) {\n                $dp[$i][$j] = array_merge(array($grid[$i][$j]), $dp[$i][$j - 1]);\n            } else if ($j == 0) {\n                $dp[$i][$j] = array_merge(array($grid[$i][$j]), $dp[$i - 1][$j]);\n            } else {\n                $dp[$i][$j] = array_merge(array($grid[$i][$j]), array_merge($dp[$i - 1][$j], $dp[$i][$j - 1]));\n            }\n        }\n    }\n    $min = INF;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($dp[$i][$j][0] < $min) {\n                $min = $dp[$i][$j][0];\n            }\n        }\n    }\n    $res = array();\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $m; $j++) {\n            if ($dp[$i][$j][0] == $min) {\n                $res = array_merge($res, $dp[$i][$j]);\n            }\n        }\n    }\n    return array_slice($res, 0, $k);\n}"}
{"task_id": "HumanEval/130", "completion": "\n    $result = array(1, 3, 2);\n    for ($i = 3; $i < $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/131", "completion": "\n    $n = (string)$n;\n    $sum = 0;\n    for ($i = 0; $i < strlen($n); $i++) {\n        if ($n[$i] % 2 == 1) {\n            $sum += $n[$i];\n        }\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/132", "completion": "\n    $stack = [];\n    $open = ['[', '('];\n    $close = [']', ')'];\n    $string = str_split($string);\n    foreach ($string as $char) {\n        if (in_array($char, $open)) {\n            array_push($stack, $char);\n        } else if (in_array($char, $close)) {\n            $last_open = array_pop($stack);\n            if ($last_open == null) {\n                return false;\n            }\n            if ($open[array_search($last_open, $close)]!= $char) {\n                return false;\n            }\n        }\n    }\n    return empty($stack)? true : false;\n}"}
{"task_id": "HumanEval/133", "completion": "\n    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += pow($num, 2);\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/134", "completion": "\n    $last_char = substr($txt, -1);\n    if (ctype_alpha($last_char) &&!ctype_alnum($last_char)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"}
{"task_id": "HumanEval/135", "completion": "\n    $arr = array_values($arr);\n    $len = count($arr);\n    $max = $arr[0];\n    $max_index = 0;\n    for ($i = 1; $i < $len; $i++) {\n        if ($arr[$i] >= $max) {\n            $max = $arr[$i];\n            $max_index = $i;\n        }\n    }\n    for ($i = 0; $i < $max_index; $i++) {\n        if ($arr[$i] < $max) {\n            return $i;\n        }\n    }\n    return -1;\n}\n"}
{"task_id": "HumanEval/136", "completion": "\n    $neg = null;\n    $pos = null;\n    foreach ($lst as $i) {\n        if ($i < 0) {\n            if ($neg === null || $neg < $i) {\n                $neg = $i;\n            }\n        } else {\n            if ($pos === null || $pos > $i) {\n                $pos = $i;\n            }\n        }\n    }\n    return array($neg, $pos);\n}\n"}
{"task_id": "HumanEval/137", "completion": "\n    if ($a == $b) {\n        return null;\n    }\n    return $a > $b? $a : $b;\n}\n"}
{"task_id": "HumanEval/138", "completion": "\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum == $n;\n}\n"}
{"task_id": "HumanEval/139", "completion": "\n    $factorial = 1;\n    for ($i = $n; $i > 0; $i--) {\n        $factorial *= $i;\n    }\n    return $factorial;\n}"}
{"task_id": "HumanEval/140", "completion": "\n    $text = str_replace(' ', '_', $text);\n    $text = preg_replace('/_+/', '_', $text);\n    $text = preg_replace('/_+/', '-', $text);\n    return $text;\n}\n"}
{"task_id": "HumanEval/141", "completion": "\n    $file_name = str_replace(\" \", \"\", $file_name);\n    $file_name = str_replace(\"..\", \"\", $file_name);\n    $file_name = str_replace(\".\", \"\", $file_name);\n    $file_name = str_replace(\"/\", \"\", $file_name);\n    $file_name = str_replace(\"\\\\\", \"\", $file_name);\n    $file_name = str_replace(\":\", \"\", $file_name);\n    $file_name = str_replace(\"*\", \"\", $file_name);\n    $file_name = str_replace(\"?\", \"\", $file_name);\n    $file_name = str_replace(\"\\\"\", \"\", $file_name);\n    $file_name = str_replace(\"<\", \"\", $file_name);\n    $file_name = str_replace(\">\", \"\", $file_name);\n    $file_name = str_replace(\"|\", \"\", $file_name);\n    $file_name = str_replace(\"\\0\", \"\", $file_name);\n    $file_name = str_replace(\"\\x0A\", \"\", $file_name);\n    $file_name = str_replace(\"\\x0D\", \"\", $file_name);\n    $file_name = str_replace(\"\\x1A\", \"\", $file_name);\n    $file_name = str_replace(\"\\x00\", \"\", $file_name);\n    $file_name = str_replace(\"\\x01\", \"\", $file_name);\n    $file_name = str_replace(\"\\x02\", \"\", $file_name);\n    $file_name = str_replace(\"\\x03\", \"\", $file_name);\n    $file_name = str_replace(\"\\x04\", \"\", $file_name);\n    $file_name = str_replace(\"\\x05\", \"\", $file_name);\n    $file_name = str_replace(\"\\x06\", \"\", $file_name);\n    $file_name = str_replace(\"\\x07\", \"\", $file_name);\n    $file_name = str_replace(\"\\x08\", \"\", $file_name);\n    $file_name = str_replace(\"\\x09\", \"\", $file_name);\n    $file_name = str_replace(\"\\x0B\", \"\", $file_name);\n    $file_name = str_replace(\"\\x"}
{"task_id": "HumanEval/142", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 3 == 0) {\n            $lst[$i] = $lst[$i] * $lst[$i];\n        }\n        if ($i % 4 == 0) {\n            $lst[$i] = $lst[$i] * $lst[$i] * $lst[$i];\n        }\n        $sum += $lst[$i];\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/143", "completion": "\n    $words = explode(\" \", $sentence);\n    $prime_words = [];\n    foreach ($words as $word) {\n        if (is_prime(strlen($word))) {\n            $prime_words[] = $word;\n        }\n    }\n    return implode(\" \", $prime_words);\n}\n"}
{"task_id": "HumanEval/144", "completion": "\n    $x = explode('/', $x);\n    $n = explode('/', $n);\n    $x = $x[0] / $x[1];\n    $n = $n[0] / $n[1];\n    return $x * $n == (int)($x * $n);\n}"}
{"task_id": "HumanEval/145", "completion": "\n    $nums = array_map(function($n) {\n        return str_split(strrev((string)$n));\n    }, $nums);\n    $nums = array_map(function($n) {\n        return array_map(function($n) {\n            return intval($n);\n        }, $n);\n    }, $nums);\n    $nums = array_map(function($n) {\n        return array_sum($n);\n    }, $nums);\n    $nums = array_combine($nums, $nums);\n    asort($nums);\n    return array_map(function($n) {\n        return $nums[$n];\n    }, array_keys($nums));\n}\n"}
{"task_id": "HumanEval/146", "completion": "\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 10 % 2 == 1 && $num % 100 % 10 % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/147", "completion": "\n    $a = range(1, $n+1);\n    $count = 0;\n    for ($i = 0; $i < count($a); $i++) {\n        for ($j = $i+1; $j < count($a); $j++) {\n            for ($k = $j+1; $k < count($a); $k++) {\n                if (($a[$i] + $a[$j] + $a[$k]) % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}\n"}
{"task_id": "HumanEval/148", "completion": "\n    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n    $result = array();\n    $index1 = array_search($planet1, $planets);\n    $index2 = array_search($planet2, $planets);\n    if ($index1 === false || $index2 === false) {\n        return array();\n    }\n    if ($index1 > $index2) {\n        $index1 += 8;\n    }\n    for ($i = $index1 + 1; $i < $index2; $i++) {\n        $result[] = $planets[$i % 8];\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/149", "completion": "\n    $new_lst = array();\n    foreach ($lst as $item) {\n        if (strlen($item) % 2 == 0) {\n            $new_lst[] = $item;\n        }\n    }\n    sort($new_lst);\n    return $new_lst;\n}\n\n$lst = array(\"aa\", \"a\", \"aaa\", \"ab\", \"cd\");\nprint_r(sorted_list_sum($lst));\n"}
{"task_id": "HumanEval/150", "completion": "\n    if (is_prime($n)) {\n        return $x;\n    } else {\n        return $y;\n    }\n}\n"}
{"task_id": "HumanEval/151", "completion": "\n    $sum = 0;\n    foreach ($lst as $num) {\n        if (is_int($num) && $num > 0) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/152", "completion": "\n    $result = array();\n    for ($i = 0; $i < count($game); $i++) {\n        $result[] = $game[$i] - $guess[$i];\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/153", "completion": "\n    $strengths = [];\n    foreach ($extensions as $extension) {\n        $strengths[] = substr_count(strtoupper($extension), 'A') - substr_count(strtoupper($extension), 'a');\n    }\n    $strengths = array_combine($extensions, $strengths);\n    arsort($strengths);\n    $strongest = array_keys($strengths)[0];\n    return $class_name. '.'. $strongest;\n}"}
{"task_id": "HumanEval/154", "completion": "\n    $a = str_split($a);\n    $b = str_split($b);\n    $len_a = count($a);\n    $len_b = count($b);\n    if ($len_a < $len_b) {\n        return false;\n    }\n    for ($i = 0; $i < $len_a; $i++) {\n        $sub_a = array_slice($a, $i, $len_b);\n        if ($sub_a == $b) {\n            return true;\n        }\n    }\n    return false;\n}\n"}
{"task_id": "HumanEval/155", "completion": "\n    $even = 0;\n    $odd = 0;\n    while($num > 0) {\n        $digit = $num % 10;\n        if($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n"}
{"task_id": "HumanEval/156", "completion": "\n    $roman_numerals = array(\n        'M' => 1000,\n        'CM' => 900,\n        'D' => 500,\n        'CD' => 400,\n        'C' => 100,\n        'XC' => 90,\n        'L' => 50,\n        'XL' => 40,\n        'X' => 10,\n        'IX' => 9,\n        'V' => 5,\n        'IV' => 4,\n        'I' => 1\n    );\n    $result = '';\n    while ($number > 0) {\n        foreach ($roman_numerals as $roman => $int) {\n            if ($number >= $int) {\n                $result.= $roman;\n                $number -= $int;\n                break;\n            }\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/157", "completion": "\n    return $a**2 + $b**2 == $c**2;\n}\n"}
{"task_id": "HumanEval/158", "completion": "\n    $max = 0;\n    $max_word = \"\";\n    foreach ($words as $word) {\n        $unique = count_unique_chars($word);\n        if ($unique > $max) {\n            $max = $unique;\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n"}
{"task_id": "HumanEval/159", "completion": "\n    $total = $number + $remaining;\n    if ($total < $need) {\n        return [$total, 0];\n    }\n    return [$need, $total - $need];\n}\n"}
{"task_id": "HumanEval/160", "completion": "\n    $result = $operand[0];\n    for ($i = 0; $i < count($operator); $i++) {\n        $result = $result. $operator[$i]. $operand[$i + 1];\n    }\n    return eval($result);\n}"}
{"task_id": "HumanEval/161", "completion": "\n    $s = str_split($s);\n    $result = [];\n    foreach ($s as $char) {\n        if (ctype_alpha($char)) {\n            $result[] = strtoupper($char) === $char? strtoupper($char) : strtolower($char);\n        } else {\n            $result[] = $char;\n        }\n    }\n    return implode('', $result);\n}\n"}
{"task_id": "HumanEval/162", "completion": "\n    if (empty($text)) {\n        return null;\n    }\n    return md5($text);\n}\n"}
{"task_id": "HumanEval/163", "completion": "\n    $a = (int) $a;\n    $b = (int) $b;\n    $result = array();\n    for ($i = $a; $i <= $b; $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $i;\n        }\n    }\n    return $result;\n}\n"}
