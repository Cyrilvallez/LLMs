{"task_id": "HumanEval/0", "completion": "\n    $numbers = array_map(function($x) { return round($x, 1); }, $numbers);\n    $numbers = array_unique($numbers);\n    sort($numbers);\n    $prev = null;\n    foreach ($numbers as $number) {\n        if ($prev!== null && abs($number - $prev) <= $threshold) {\n            return true;\n        }\n        $prev = $number;\n    }\n    return false;\n}"}
{"task_id": "HumanEval/1", "completion": "\n    $paren_string = preg_replace('/\\s+/', '', $paren_string);\n    $paren_string = preg_replace('/\\(/','( ', $paren_string);\n    $paren_string = preg_replace('/\\)/',') ', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace('/\\s+/','', $paren_string);\n    $paren_string = preg_replace"}
{"task_id": "HumanEval/2", "completion": "\n    return $number - floor($number);\n}\n"}
{"task_id": "HumanEval/3", "completion": "\n    $balance = 0;\n    foreach ($operations as $operation) {\n        $balance += $operation;\n        if ($balance < 0) {\n            return true;\n        }\n    }\n    return false;\n}"}
{"task_id": "HumanEval/4", "completion": "\n    $mean = array_sum($numbers) / count($numbers);\n    $absolute_deviations = array_map(function($number) use ($mean) {\n        return abs($number - $mean);\n    }, $numbers);\n    return array_sum($absolute_deviations) / count($absolute_deviations);\n}\n"}
{"task_id": "HumanEval/5", "completion": "\n    $result = array();\n    foreach ($numbers as $number) {\n        array_push($result, $number);\n        array_push($result, $delimeter);\n    }\n    array_pop($result);\n    return $result;\n}"}
{"task_id": "HumanEval/6", "completion": "\n    $paren_array = explode(\" \", $paren_string);\n    $max_level = 0;\n    foreach ($paren_array as $paren_group) {\n        $level = 0;\n        $paren_group = str_replace(\"(\", \"\", $paren_group);\n        $paren_group = str_replace(\")\", \"\", $paren_group);\n        $paren_group = str_replace(\" \", \"\", $paren_group);\n        $paren_group = str_split($paren_group);\n        foreach ($paren_group as $paren) {\n            if ($paren == \"(\") {\n                $level++;\n            } else {\n                $level--;\n            }\n            if ($level > $max_level) {\n                $max_level = $level;\n            }\n        }\n    }\n    return $max_level;\n}"}
{"task_id": "HumanEval/7", "completion": "\n    $result = array();\n    foreach ($strings as $string) {\n        if (strpos($string, $substring)!== false) {\n            $result[] = $string;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/8", "completion": "\n    $sum = 0;\n    $product = 1;\n    foreach ($numbers as $number) {\n        $sum += $number;\n        $product *= $number;\n    }\n    return array($sum, $product);\n}"}
{"task_id": "HumanEval/9", "completion": "\n    $max = array_fill(0, count($numbers), 0);\n    $max[0] = $numbers[0];\n    for ($i = 1; $i < count($numbers); $i++) {\n        $max[$i] = max($max[$i - 1], $numbers[$i]);\n    }\n    return $max;\n}\n"}
{"task_id": "HumanEval/10", "completion": "\n    $len = strlen($string);\n    $max_palindrome_len = 0;\n    $max_palindrome_start = 0;\n    for ($i = 0; $i < $len; $i++) {\n        $palindrome_len = 0;\n        for ($j = $i; $j < $len; $j++) {\n            if ($string[$j]!= $string[$len - $j - 1]) {\n                break;\n            }\n            $palindrome_len++;\n        }\n        if ($palindrome_len > $max_palindrome_len) {\n            $max_palindrome_len = $palindrome_len;\n            $max_palindrome_start = $i;\n        }\n    }\n    return substr($string, 0, $max_palindrome_start). strrev(substr($string, $max_palindrome_start, $max_palindrome_len));\n}"}
{"task_id": "HumanEval/11", "completion": "\n    $result = '';\n    for ($i = 0; $i < strlen($a); $i++) {\n        $result.= ($a[$i] == $b[$i])? '0' : '1';\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/12", "completion": "\n    $longest = null;\n    $longest_length = 0;\n    foreach ($strings as $string) {\n        $length = strlen($string);\n        if ($length > $longest_length) {\n            $longest = $string;\n            $longest_length = $length;\n        }\n    }\n    return $longest;\n}\n"}
{"task_id": "HumanEval/13", "completion": "\n    if ($a < $b) {\n        $temp = $a;\n        $a = $b;\n        $b = $temp;\n    }\n    while ($b!= 0) {\n        $temp = $a % $b;\n        $a = $b;\n        $b = $temp;\n    }\n    return $a;\n}\n"}
{"task_id": "HumanEval/14", "completion": "\n    $prefixes = array();\n    for ($i = 0; $i < strlen($string); $i++) {\n        $prefixes[] = substr($string, 0, $i + 1);\n    }\n    return $prefixes;\n}\n"}
{"task_id": "HumanEval/15", "completion": "\n    $s = \"\";\n    for ($i = 0; $i <= $n; $i++) {\n        $s.= \" $i\";\n    }\n    return substr($s, 1);\n}\n"}
{"task_id": "HumanEval/16", "completion": "\n    $string = strtolower($string);\n    $chars = str_split($string);\n    $distinct_chars = array_unique($chars);\n    return count($distinct_chars);\n}"}
{"task_id": "HumanEval/17", "completion": "\n    $notes = str_split($music_string);\n    $result = [];\n    foreach ($notes as $note) {\n        if ($note == 'o') {\n            $result[] = 4;\n        } elseif ($note == 'o|') {\n            $result[] = 2;\n        } elseif ($note == '.|') {\n            $result[] = 1;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/18", "completion": "\n    $count = 0;\n    $string_length = strlen($string);\n    $substring_length = strlen($substring);\n    for ($i = 0; $i < $string_length; $i++) {\n        if (substr($string, $i, $substring_length) == $substring) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"}
{"task_id": "HumanEval/19", "completion": "\n    $numbers = explode(\" \", $numbers);\n    sort($numbers);\n    return implode(\" \", $numbers);\n}"}
{"task_id": "HumanEval/20", "completion": "\n    $min = $numbers[0];\n    $min_index = 0;\n    $max = $numbers[0];\n    $max_index = 0;\n    for ($i = 1; $i < count($numbers); $i++) {\n        if ($numbers[$i] < $min) {\n            $min = $numbers[$i];\n            $min_index = $i;\n        }\n        if ($numbers[$i] > $max) {\n            $max = $numbers[$i];\n            $max_index = $i;\n        }\n    }\n    if ($min_index > $max_index) {\n        return array($max, $min);\n    } else {\n        return array($min, $max);\n    }\n}"}
{"task_id": "HumanEval/21", "completion": "\n    $min = min($numbers);\n    $max = max($numbers);\n    $range = $max - $min;\n    $result = array();\n    foreach ($numbers as $number) {\n        $result[] = ($number - $min) / $range;\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/22", "completion": "\n    $result = array();\n    foreach ($values as $value) {\n        if (is_int($value)) {\n            $result[] = $value;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/23", "completion": "\n    $length = 0;\n    for ($i = 0; $i < strlen($string); $i++) {\n        $length++;\n    }\n    return $length;\n}"}
{"task_id": "HumanEval/24", "completion": "\n    $divisor = 2;\n    while ($n % $divisor!= 0) {\n        $divisor++;\n    }\n    return $divisor;\n}\n"}
{"task_id": "HumanEval/25", "completion": "\n    $factors = array();\n    $i = 2;\n    while ($i <= $n) {\n        if ($n % $i == 0) {\n            $factors[] = $i;\n            $n = $n / $i;\n        } else {\n            $i++;\n        }\n    }\n    return $factors;\n}"}
{"task_id": "HumanEval/26", "completion": "\n    $result = array();\n    foreach ($numbers as $number) {\n        if (!in_array($number, $result)) {\n            $result[] = $number;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/27", "completion": "\n    return strtr($string, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz');\n}"}
{"task_id": "HumanEval/28", "completion": "\n    $result = \"\";\n    foreach ($strings as $string) {\n        $result.= $string;\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/29", "completion": "\n    $filtered = array();\n    foreach ($strings as $string) {\n        if (strpos($string, $prefix) === 0) {\n            $filtered[] = $string;\n        }\n    }\n    return $filtered;\n}\n"}
{"task_id": "HumanEval/30", "completion": "\n    $result = array();\n    foreach ($l as $v) {\n        if ($v > 0) {\n            $result[] = $v;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/31", "completion": "\n    if ($n == 1) {\n        return false;\n    }\n    if ($n == 2) {\n        return true;\n    }\n    if ($n % 2 == 0) {\n        return false;\n    }\n    $max = floor(sqrt($n));\n    for ($i = 3; $i <= $max; $i += 2) {\n        if ($n % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n}\n"}
{"task_id": "HumanEval/33", "completion": "\n    $l_new = array();\n    for ($i = 0; $i < count($l); $i++) {\n        if ($i % 3 == 0) {\n            $l_new[$i] = $l[$i];\n        } else {\n            $l_new[$i] = $l[$i - 1];\n        }\n    }\n    return $l_new;\n}"}
{"task_id": "HumanEval/34", "completion": "\n    $r = array();\n    foreach ($l as $v) {\n        if (!in_array($v, $r)) {\n            $r[] = $v;\n        }\n    }\n    return $r;\n}\n"}
{"task_id": "HumanEval/35", "completion": "\n    $max = $l[0];\n    foreach ($l as $e) {\n        if ($e > $max) {\n            $max = $e;\n        }\n    }\n    return $max;\n}"}
{"task_id": "HumanEval/36", "completion": "\n    $count = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($i % 11 == 0 || $i % 13 == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/37", "completion": "\n    $l_even = array();\n    $l_odd = array();\n    for ($i = 0; $i < count($l); $i++) {\n        if ($i % 2 == 0) {\n            $l_even[] = $l[$i];\n        } else {\n            $l_odd[] = $l[$i];\n        }\n    }\n    sort($l_odd);\n    $l_even = array_merge($l_even, $l_odd);\n    return $l_even;\n}"}
{"task_id": "HumanEval/39", "completion": "\n    $fib = [0, 1];\n    $prime = [2];\n    $i = 2;\n    while ($i < $n) {\n        $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n        $i++;\n    }\n    $i = 0;\n    while ($i < $n) {\n        if (is_prime($fib[$i])) {\n            $prime[$i] = $fib[$i];\n        }\n        $i++;\n    }\n    return $prime[$n - 1];\n}\n"}
{"task_id": "HumanEval/40", "completion": "\n    $l = array_unique($l);\n    $l = array_values($l);\n    $n = count($l);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = $i + 1; $j < $n; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($l[$i] + $l[$j] + $l[$k] == 0) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}"}
{"task_id": "HumanEval/41", "completion": "\n    $left_to_right = range(0, $n - 1);\n    $right_to_left = range($n - 1, 0, -1);\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($left_to_right[$i] == $right_to_left[$i]) {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}"}
{"task_id": "HumanEval/42", "completion": "\n    $out = array();\n    foreach ($l as $e) {\n        $out[] = $e + 1;\n    }\n    return $out;\n}\n"}
{"task_id": "HumanEval/43", "completion": "\n    $s = array_sum($l);\n    $seen = array();\n    foreach ($l as $i) {\n        $r = $s - $i;\n        if (array_key_exists($r, $seen)) {\n            return true;\n        }\n        $seen[$i] = true;\n    }\n    return false;\n}"}
{"task_id": "HumanEval/44", "completion": "\n    $result = \"\";\n    while ($x > 0) {\n        $result = $x % $base. $result;\n        $x = floor($x / $base);\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/45", "completion": "\n    return ($a * $h) / 2;\n}\n"}
{"task_id": "HumanEval/46", "completion": "\n    $fib4 = [0, 0, 2, 0];\n    for ($i = 4; $i <= $n; $i++) {\n        $fib4[$i] = $fib4[$i - 1] + $fib4[$i - 2] + $fib4[$i - 3] + $fib4[$i - 4];\n    }\n    return $fib4[$n];\n}\n"}
{"task_id": "HumanEval/47", "completion": "\n    sort($l);\n    $n = count($l);\n    if ($n % 2 == 0) {\n        return ($l[$n / 2 - 1] + $l[$n / 2]) / 2;\n    } else {\n        return $l[floor($n / 2)];\n    }\n}"}
{"task_id": "HumanEval/48", "completion": "\n    $text = strtolower($text);\n    $text = preg_replace('/[^a-z0-9]/', '', $text);\n    $text = strrev($text);\n    return $text == $text;\n}"}
{"task_id": "HumanEval/49", "completion": "\n    $n = $n % $p;\n    return $n < 0? $n + $p : $n;\n}\n"}
{"task_id": "HumanEval/51", "completion": "\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $text = strtolower($text);\n    $text = str_replace($vowels, \"\", $text);\n    return $text;\n}\n"}
{"task_id": "HumanEval/52", "completion": "\n    foreach ($l as $value) {\n        if ($value >= $t) {\n            return false;\n        }\n    }\n    return true;\n}"}
{"task_id": "HumanEval/53", "completion": "\n    return $x + $y;\n}\n"}
{"task_id": "HumanEval/54", "completion": "\n    $s0 = str_split($s0);\n    $s1 = str_split($s1);\n    sort($s0);\n    sort($s1);\n    return $s0 == $s1;\n}"}
{"task_id": "HumanEval/55", "completion": "\n    if ($n <= 1) {\n        return 1;\n    }\n    return fib($n - 1) + fib($n - 2);\n}\n"}
{"task_id": "HumanEval/56", "completion": "\n    $stack = [];\n    $brackets = str_split($brackets);\n    foreach ($brackets as $bracket) {\n        if ($bracket == '<') {\n            array_push($stack, $bracket);\n        } else if ($bracket == '>') {\n            if (count($stack) == 0) {\n                return false;\n            }\n            array_pop($stack);\n        }\n    }\n    return count($stack) == 0;\n}"}
{"task_id": "HumanEval/57", "completion": "\n    $l = array_values($l);\n    $n = count($l);\n    for ($i = 1; $i < $n; $i++) {\n        if ($l[$i] < $l[$i-1]) {\n            return false;\n        }\n    }\n    return true;\n}"}
{"task_id": "HumanEval/58", "completion": "\n    $l1 = array_unique($l1);\n    $l2 = array_unique($l2);\n    $l3 = array_intersect($l1, $l2);\n    sort($l3);\n    return $l3;\n}"}
{"task_id": "HumanEval/59", "completion": "\n    $i = 2;\n    while ($i * $i <= $n) {\n        if ($n % $i == 0) {\n            $n = $n / $i;\n        } else {\n            $i = $i + 1;\n        }\n    }\n    return $n;\n}"}
{"task_id": "HumanEval/60", "completion": "\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $sum += $i;\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/61", "completion": "\n    $stack = [];\n    for ($i = 0; $i < strlen($brackets); $i++) {\n        if ($brackets[$i] == '(') {\n            array_push($stack, $brackets[$i]);\n        } else {\n            if (count($stack) == 0) {\n                return false;\n            }\n            array_pop($stack);\n        }\n    }\n    return count($stack) == 0;\n}"}
{"task_id": "HumanEval/62", "completion": "\n    $n = count($xs);\n    $ys = array_fill(0, $n, 0);\n    for ($i = 1; $i < $n; $i++) {\n        $ys[$i] = $i * $xs[$i];\n    }\n    return $ys;\n}\n"}
{"task_id": "HumanEval/63", "completion": "\n    if ($n <= 1) {\n        return 0;\n    }\n    if ($n <= 2) {\n        return 1;\n    }\n    $fibfib = [0, 1, 1];\n    for ($i = 3; $i <= $n; $i++) {\n        $fibfib[$i] = $fibfib[$i - 1] + $fibfib[$i - 2] + $fibfib[$i - 3];\n    }\n    return $fibfib[$n];\n}\n"}
{"task_id": "HumanEval/64", "completion": "\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (in_array($s[$i], $vowels)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"}
{"task_id": "HumanEval/65", "completion": "\n    $x = strval($x);\n    $shift = intval($shift);\n    $len = strlen($x);\n    if ($shift > $len) {\n        $shift = $shift % $len;\n    }\n    return substr($x, $shift). substr($x, 0, $shift);\n}\n"}
{"task_id": "HumanEval/66", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < strlen($s); $i++) {\n        $c = ord($s[$i]);\n        if ($c >= 65 && $c <= 90) {\n            $sum += $c;\n        }\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/67", "completion": "\n    $s = explode(\" \", $s);\n    $apples = $s[0];\n    $oranges = $s[3];\n    $mango = $apples + $oranges;\n    $mango = $mango * 2;\n    $mango = $mango - $n;\n    return $mango;\n}"}
{"task_id": "HumanEval/68", "completion": "\n  $even = [];\n  $even_index = [];\n  $even_value = [];\n  $even_index_value = [];\n  $even_index_value_index = [];\n  $even_index_value_index_even = [];\n  $even_index_value_index_even_index = [];\n  $even_index_value_index_even_index_value = [];\n  $even_index_value_index_even_index_value_index = [];\n  $even_index_value_index_even_index_value_index_even = [];\n  $even_index_value_index_even_index_value_index_even_index = [];\n  $even_index_value_index_even_index_value_index_even_index_value = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index_value = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index_value_index = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index_value_index_even = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index_value_index_even_index = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index_value_index_even_index_value = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index_even_index_value_index_even_index_value_index = [];\n  $even_index_value_index_even_index_value_index_even_index_value_index"}
{"task_id": "HumanEval/69", "completion": "\n    $max = -1;\n    $max_count = 0;\n    foreach ($lst as $val) {\n        if ($val > $max) {\n            $max = $val;\n            $max_count = 1;\n        } else if ($val == $max) {\n            $max_count++;\n        }\n    }\n    if ($max_count >= $max) {\n        return $max;\n    } else {\n        return -1;\n    }\n}"}
{"task_id": "HumanEval/70", "completion": "\n    $min = min($lst);\n    $max = max($lst);\n    $min_max = array_merge(array($min), array_diff($lst, array($min, $max)));\n    $max_min = array_merge(array($max), array_diff($lst, array($min, $max)));\n    return array_merge($min_max, $max_min);\n}"}
{"task_id": "HumanEval/71", "completion": "\n    if ($a + $b > $c && $b + $c > $a && $a + $c > $b) {\n        return round((($a + $b + $c) / 2) * ($a - $b + $c - $a), 2);\n    } else {\n        return -1;\n    }\n}\n"}
{"task_id": "HumanEval/72", "completion": "\n    $sum = 0;\n    foreach ($q as $element) {\n        $sum += $element;\n    }\n    if ($sum > $w) {\n        return false;\n    }\n    $q = array_reverse($q);\n    $q = implode('', $q);\n    if ($q == $q) {\n        return true;\n    }\n    return false;\n}"}
{"task_id": "HumanEval/73", "completion": "\n    $len = count($arr);\n    $count = 0;\n    for ($i = 0; $i < $len; $i++) {\n        if ($arr[$i]!= $arr[$len - 1 - $i]) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/74", "completion": "\n    $result = [];\n    $result_count = 0;\n    $result_count_2 = 0;\n    foreach ($lst1 as $key => $value) {\n        $result_count += strlen($value);\n    }\n    foreach ($lst2 as $key => $value) {\n        $result_count_2 += strlen($value);\n    }\n    if ($result_count < $result_count_2) {\n        return $lst1;\n    } else if ($result_count > $result_count_2) {\n        return $lst2;\n    } else {\n        return $lst1;\n    }\n}"}
{"task_id": "HumanEval/75", "completion": "\n    $primes = array(2, 3, 5, 7, 11, 13, 17, 19, 23, 29);\n    $factors = array();\n    $i = 0;\n    while ($a > 1) {\n        if ($a % $primes[$i] == 0) {\n            $factors[] = $primes[$i];\n            $a = $a / $primes[$i];\n        } else {\n            $i++;\n        }\n    }\n    if (count($factors) == 3) {\n        return true;\n    } else {\n        return false;\n    }\n}"}
{"task_id": "HumanEval/76", "completion": "\n    return $x == pow($n, intval(log($x, $n)));\n}"}
{"task_id": "HumanEval/77", "completion": "\n    return $a == 0 || ($a > 0 && $a == pow($a, 1/3));\n}"}
{"task_id": "HumanEval/78", "completion": "\n    $num = strtoupper($num);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        $char = $num[$i];\n        if ($char == 'A' || $char == 'B' || $char == 'C' || $char == 'D' || $char == 'E' || $char == 'F') {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/79", "completion": "\n    $binary = decbin($decimal);\n    $binary = str_pad($binary, 8, \"0\", STR_PAD_LEFT);\n    return \"db\". $binary. \"db\";\n}\n"}
{"task_id": "HumanEval/80", "completion": "\n    $s = str_split($s);\n    $s = array_unique($s);\n    $s = array_values($s);\n    $s = implode(\"\", $s);\n    if (strlen($s) < 3) {\n        return false;\n    }\n    if ($s == \"111\" || $s == \"222\" || $s == \"333\" || $s == \"444\" || $s == \"555\" || $s == \"666\" || $s == \"777\" || $s == \"888\" || $s == \"999\") {\n        return false;\n    }\n    return true;\n}"}
{"task_id": "HumanEval/81", "completion": "\n    $grades_array = array();\n    foreach ($grades as $grade) {\n        if ($grade >= 4.0) {\n            $grades_array[] = \"A+\";\n        } elseif ($grade >= 3.7) {\n            $grades_array[] = \"A\";\n        } elseif ($grade >= 3.3) {\n            $grades_array[] = \"A-\";\n        } elseif ($grade >= 3.0) {\n            $grades_array[] = \"B+\";\n        } elseif ($grade >= 2.7) {\n            $grades_array[] = \"B\";\n        } elseif ($grade >= 2.3) {\n            $grades_array[] = \"B-\";\n        } elseif ($grade >= 2.0) {\n            $grades_array[] = \"C+\";\n        } elseif ($grade >= 1.7) {\n            $grades_array[] = \"C\";\n        } elseif ($grade >= 1.3) {\n            $grades_array[] = \"C-\";\n        } elseif ($grade >= 1.0) {\n            $grades_array[] = \"D+\";\n        } elseif ($grade >= 0.7) {\n            $grades_array[] = \"D\";\n        } elseif ($grade >= 0.0) {\n            $grades_array[] = \"D-\";\n        } else {\n            $grades_array[] = \"E\";\n        }\n    }\n    return $grades_array;\n}"}
{"task_id": "HumanEval/82", "completion": "\n  $length = strlen($string);\n  for ($i = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n    }\n  }\n  return true;\n}"}
{"task_id": "HumanEval/83", "completion": "\n    $count = 0;\n    for ($i = 1; $i < pow(10, $n); $i++) {\n        if (substr($i, 0, 1) == 1 || substr($i, -1, 1) == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n"}
{"task_id": "HumanEval/84", "completion": "\n    $binary = decbin($N);\n    return $binary;\n}"}
{"task_id": "HumanEval/85", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/86", "completion": "\n    $words = explode(\" \", $s);\n    $new_words = [];\n    foreach ($words as $word) {\n        $new_word = \"\";\n        $chars = str_split($word);\n        sort($chars);\n        foreach ($chars as $char) {\n            $new_word.= $char;\n        }\n        $new_words[] = $new_word;\n    }\n    return implode(\" \", $new_words);\n}\n"}
{"task_id": "HumanEval/87", "completion": "\n    $result = array();\n    foreach ($lst as $row_index => $row) {\n        $row_index++;\n        $row_index_in_result = array_search($row_index, array_column($result, 0));\n        if ($row_index_in_result === false) {\n            $row_index_in_result = count($result);\n            $result[$row_index_in_result] = array($row_index, 0);\n        }\n        foreach ($row as $column_index => $column) {\n            if ($column == $x) {\n                $result[$row_index_in_result][1]++;\n            }\n        }\n    }\n    usort($result, function($a, $b) {\n        if ($a[0] == $b[0]) {\n            return $b[1] - $a[1];\n        }\n        return $a[0] - $b[0];\n    });\n    return $result;\n}"}
{"task_id": "HumanEval/88", "completion": "\n    if (count($array) <= 1) {\n        return $array;\n    }\n    $sum = $array[0] + $array[count($array) - 1];\n    if ($sum % 2 == 0) {\n        sort($array);\n    } else {\n        rsort($array);\n    }\n    return $array;\n}"}
{"task_id": "HumanEval/89", "completion": "\n    $alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n    $encrypted = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        $encrypted.= $alphabet[(strpos($alphabet, $s[$i]) + 2) % 26];\n    }\n    return $encrypted;\n}"}
{"task_id": "HumanEval/90", "completion": "\n    $smallest = null;\n    $second_smallest = null;\n    foreach ($lst as $item) {\n        if ($smallest === null) {\n            $smallest = $item;\n        } else if ($second_smallest === null) {\n            if ($item < $smallest) {\n                $second_smallest = $smallest;\n                $smallest = $item;\n            } else {\n                $second_smallest = $item;\n            }\n        } else if ($item < $smallest) {\n            $second_smallest = $smallest;\n            $smallest = $item;\n        } else if ($item < $second_smallest) {\n            $second_smallest = $item;\n        }\n    }\n    return $second_smallest;\n}\n"}
{"task_id": "HumanEval/91", "completion": "\n    $words = explode(\" \", $S);\n    $count = 0;\n    foreach ($words as $word) {\n        if (substr($word, 0, 1) == \"I\") {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/92", "completion": "\n    return (is_int($x) || is_int($y) || is_int($z)) && ($x + $y + $z == $x || $x + $y + $z == $y || $x + $y + $z == $z);\n}"}
{"task_id": "HumanEval/93", "completion": "\n    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $encoded = '';\n    $message = strtolower($message);\n    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels)) {\n            $encoded.= $message[$i + 2];\n            $i++;\n        } else {\n            $encoded.= $message[$i];\n        }\n    }\n    return $encoded;\n}\n"}
{"task_id": "HumanEval/94", "completion": "\n    $max = 0;\n    foreach ($lst as $num) {\n        if ($num > $max) {\n            $max = $num;\n        }\n    }\n    $max_str = strval($max);\n    $max_len = strlen($max_str);\n    $max_len_half = intval($max_len / 2);\n    $max_len_half_plus_one = $max_len_half + 1;\n    $max_len_half_minus_one = $max_len_half - 1;\n    $max_len_half_minus_two = $max_len_half - 2;\n    $max_len_half_minus_three = $max_len_half - 3;\n    $max_len_half_minus_four = $max_len_half - 4;\n    $max_len_half_minus_five = $max_len_half - 5;\n    $max_len_half_minus_six = $max_len_half - 6;\n    $max_len_half_minus_seven = $max_len_half - 7;\n    $max_len_half_minus_eight = $max_len_half - 8;\n    $max_len_half_minus_nine = $max_len_half - 9;\n    $max_len_half_minus_ten = $max_len_half - 10;\n    $max_len_half_minus_eleven = $max_len_half - 11;\n    $max_len_half_minus_twelve = $max_len_half - 12;\n    $max_len_half_minus_thirteen = $max_len_half - 13;\n    $max_len_half_minus_fourteen = $max_len_half - 14;\n    $max_len_half_minus_fifteen = $max_len_half - 15;\n    $max_len_half_minus_sixteen = $max_len_half - 16;\n    $max_len_half_minus_seventeen = $max_len_half - 17;\n    $max_len_half_minus_eighteen = $max_len_half -"}
{"task_id": "HumanEval/95", "completion": "\n    if (count($dict) == 0) {\n        return false;\n    }\n    $first_key = array_keys($dict)[0];\n    if (is_string($first_key)) {\n        $first_key = strtolower($first_key);\n    }\n    foreach ($dict as $key => $value) {\n        if (is_string($key)) {\n            $key = strtolower($key);\n        }\n        if ($key!= $first_key) {\n            return false;\n        }\n    }\n    return true;\n}"}
{"task_id": "HumanEval/96", "completion": "\n    $primes = array();\n    for ($i = 2; $i < $n; $i++) {\n        if (is_prime($i)) {\n            $primes[] = $i;\n        }\n    }\n    return $primes;\n}\n"}
{"task_id": "HumanEval/97", "completion": "\n    $a = (int) $a;\n    $b = (int) $b;\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}"}
{"task_id": "HumanEval/98", "completion": "\n    $count = 0;\n    for ($i = 0; $i < strlen($s); $i += 2) {\n        if (ctype_upper($s[$i])) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/99", "completion": "\n  $value = (int) $value;\n  return $value - ($value % 1);\n}"}
{"task_id": "HumanEval/100", "completion": "\n    $pile = [];\n    $pile[0] = $n;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % 2 == 0) {\n            $pile[$i] = $pile[$i - 1] + 2;\n        } else {\n            $pile[$i] = $pile[$i - 1] + 1;\n        }\n    }\n    return $pile;\n}\n"}
{"task_id": "HumanEval/101", "completion": "\n    return explode(\" \", $s);\n}"}
{"task_id": "HumanEval/102", "completion": "\n    $x = intval($x);\n    $y = intval($y);\n    if ($x % 2 == 1) {\n        $x++;\n    }\n    if ($y % 2 == 1) {\n        $y--;\n    }\n    if ($x > $y) {\n        return -1;\n    }\n    $result = -1;\n    for ($i = $x; $i <= $y; $i += 2) {\n        if ($i > $result) {\n            $result = $i;\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/103", "completion": "\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = ($n + $m) / 2;\n    return decbin($avg);\n}"}
{"task_id": "HumanEval/104", "completion": "\n    $result = [];\n    foreach ($x as $value) {\n        $digits = str_split($value);\n        $has_even = false;\n        foreach ($digits as $digit) {\n            if ($digit % 2 == 0) {\n                $has_even = true;\n                break;\n            }\n        }\n        if (!$has_even) {\n            $result[] = $value;\n        }\n    }\n    sort($result);\n    return $result;\n}"}
{"task_id": "HumanEval/105", "completion": "\n    $result = array();\n    foreach ($arr as $num) {\n        if ($num >= 1 && $num <= 9) {\n            $result[] = $num;\n        }\n    }\n    rsort($result);\n    $result = array_reverse($result);\n    $result = array_map(function($num) {\n        switch ($num) {\n            case 1:\n                return \"One\";\n            case 2:\n                return \"Two\";\n            case 3:\n                return \"Three\";\n            case 4:\n                return \"Four\";\n            case 5:\n                return \"Five\";\n            case 6:\n                return \"Six\";\n            case 7:\n                return \"Seven\";\n            case 8:\n                return \"Eight\";\n            case 9:\n                return \"Nine\";\n        }\n    }, $result);\n    return $result;\n}"}
{"task_id": "HumanEval/106", "completion": "\n    $result = [];\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[] = $i * ($i + 1) / 2;\n        } else {\n            $result[] = $i * ($i + 1) / 2;\n        }\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/107", "completion": "\n    $even = 0;\n    $odd = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        $temp = $i;\n        $even_temp = 0;\n        $odd_temp = 0;\n        while ($temp > 0) {\n            $even_temp += $temp % 10;\n            $odd_temp += $temp % 10;\n            $temp = floor($temp / 10);\n        }\n        if ($even_temp == $i) {\n            $even++;\n        }\n        if ($odd_temp == $i) {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n"}
{"task_id": "HumanEval/108", "completion": "\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n            $num = $num / 10;\n        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/109", "completion": "\n    $n = count($arr);\n    if ($n == 0) {\n        return true;\n    }\n    $i = 0;\n    while ($i < $n - 1) {\n        if ($arr[$i] > $arr[$i + 1]) {\n            $arr[$i] = $arr[$i] ^ $arr[$i + 1];\n            $arr[$i + 1] = $arr[$i] ^ $arr[$i + 1];\n            $arr[$i] = $arr[$i] ^ $arr[$i + 1];\n            $i = 0;\n        } else {\n            $i++;\n        }\n    }\n    return true;\n}"}
{"task_id": "HumanEval/110", "completion": "\n    $lst1 = array_values($lst1);\n    $lst2 = array_values($lst2);\n    $len1 = count($lst1);\n    $len2 = count($lst2);\n    if ($len1!== $len2) {\n        return \"NO\";\n    }\n    $i = 0;\n    while ($i < $len1) {\n        if ($lst1[$i] % 2!== 0) {\n            $lst1[$i] = $lst2[$i];\n            $lst2[$i] = $lst1[$i];\n        }\n        $i++;\n    }\n    $i = 0;\n    while ($i < $len1) {\n        if ($lst1[$i] % 2!== 0) {\n            return \"NO\";\n        }\n        $i++;\n    }\n    return \"YES\";\n}"}
{"task_id": "HumanEval/111", "completion": "\n    $histogram = array();\n    $test = strtolower($test);\n    $test = str_split($test);\n    foreach ($test as $letter) {\n        if (array_key_exists($letter, $histogram)) {\n            $histogram[$letter] += 1;\n        } else {\n            $histogram[$letter] = 1;\n        }\n    }\n    return $histogram;\n}"}
{"task_id": "HumanEval/112", "completion": "\n    $result = \"\";\n    $is_palindrome = true;\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (strpos($c, $s[$i]) === false) {\n            $result.= $s[$i];\n        } else {\n            $is_palindrome = false;\n        }\n    }\n    return array($result, $is_palindrome);\n}"}
{"task_id": "HumanEval/113", "completion": "\n    $result = [];\n    foreach ($lst as $str) {\n        $result[] = \"the number of odd elements \". substr_count($str, \"1\"). \"n the str\". $str. \" of the \". $str. \"nput.\";\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/114", "completion": "\n    $sum = 0;\n    $min = PHP_INT_MAX;\n    foreach ($nums as $num) {\n        $sum += $num;\n        if ($sum < $min) {\n            $min = $sum;\n        }\n        if ($sum < 0) {\n            $sum = 0;\n        }\n    }\n    return $min;\n}"}
{"task_id": "HumanEval/115", "completion": "\n    $rows = count($grid);\n    $cols = count($grid[0]);\n    $buckets = array_fill(0, $rows, 0);\n    $filled = 0;\n    $count = 0;\n    while ($filled < $rows * $cols) {\n        $count++;\n        for ($i = 0; $i < $rows; $i++) {\n            if ($buckets[$i] < $capacity) {\n                $filled++;\n                $buckets[$i] += $grid[$i][$buckets[$i]];\n            }\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/116", "completion": "\n    $arr = array_map(function($n) {\n        return str_pad(decbin($n), 32, '0', STR_PAD_LEFT);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_pad(strrev($n), 32, '0', STR_PAD_LEFT);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_pad(str_replace('0', '2', $n), 32, '0', STR_PAD_LEFT);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_pad(str_replace('1', '0', $n), 32, '0', STR_PAD_LEFT);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return str_pad(str_replace('2', '1', $n), 32, '0', STR_PAD_LEFT);\n    }, $arr);\n    $arr = array_map(function($n) {\n        return bindec($n);\n    }, $arr);\n    sort($arr);\n    return $arr;\n}"}
{"task_id": "HumanEval/117", "completion": "\n    $words = explode(\" \", $s);\n    $result = [];\n    foreach ($words as $word) {\n        $consonants = 0;\n        foreach (str_split($word) as $char) {\n            if (ctype_alpha($char)) {\n                if (!ctype_upper($char)) {\n                    $consonants++;\n                }\n            }\n        }\n        if ($consonants == $n) {\n            $result[] = $word;\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/118", "completion": "\n    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $vowel_found = false;\n    $vowel_index = 0;\n    $vowel_distance = 0;\n    $word_length = strlen($word);\n    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_found = true;\n            $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n            if (in_array($word[$i], $vowels)) {\n                $vowel_distance = $i - $vowel_index;\n                break;\n            }\n        }\n    }\n    if ($vowel_distance == 0) {\n        return \"\";\n    } else {\n        return $word[$vowel_index + $vowel_distance];\n    }\n}"}
{"task_id": "HumanEval/119", "completion": "\n    $stack = [];\n    foreach ($lst as $char) {\n        if ($char == '(') {\n            array_push($stack, $char);\n        } else {\n            if (count($stack) == 0) {\n                return \"No\";\n            }\n            array_pop($stack);\n        }\n    }\n    return count($stack) == 0? \"Yes\" : \"No\";\n}"}
{"task_id": "HumanEval/120", "completion": "\n    // Write your code here.\n    $arr = array_slice($arr, 0, $k);\n    sort($arr);\n    return $arr;\n}"}
{"task_id": "HumanEval/121", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 2 == 0 && $lst[$i] % 2!= 0) {\n            $sum += $lst[$i];\n        }\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/122", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < $k; $i++) {\n        $sum += $arr[$i];\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/123", "completion": "\n    $arr = [];\n    while ($n!= 1) {\n        if ($n % 2 == 0) {\n            $n = $n / 2;\n        } else {\n            $n = 3 * $n + 1;\n        }\n        array_push($arr, $n);\n    }\n    return $arr;\n}\n"}
{"task_id": "HumanEval/124", "completion": "\n    $date = explode(\"-\", $date);\n    $month = $date[0];\n    $day = $date[1];\n    $year = $date[2];\n    if (empty($date)) {\n        return false;\n    }\n    if ($month < 1 || $month > 12) {\n        return false;\n    }\n    if ($day < 1 || $day > 31) {\n        if ($month == 1 || $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12) {\n            return false;\n        }\n        if ($day < 1 || $day > 30) {\n            if ($month == 4 || $month == 6 || $month == 9 || $month == 11) {\n                return false;\n            }\n            if ($day < 1 || $day > 29) {\n                return false;\n            }\n        }\n    }\n    if ($year < 1000 || $year > 3000) {\n        return false;\n    }\n    return true;\n}"}
{"task_id": "HumanEval/125", "completion": "\n    $words = explode(\" \", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\",\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n    $words = str_split($txt);\n    $count = 0;\n    foreach ($words as $word) {\n        if (ord($word) % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/126", "completion": "\n    $prev = null;\n    foreach ($lst as $val) {\n        if ($prev!== null && $prev > $val) {\n            return false;\n        }\n        $prev = $val;\n    }\n    return true;\n}"}
{"task_id": "HumanEval/127", "completion": "\n    $start1 = $interval1[0];\n    $end1 = $interval1[1];\n    $start2 = $interval2[0];\n    $end2 = $interval2[1];\n    if ($start1 > $end1 || $start2 > $end2) {\n        return \"NO\";\n    }\n    if ($start1 > $start2) {\n        $start1 = $interval2[0];\n        $end1 = $interval2[1];\n    } else {\n        $start1 = $interval1[0];\n        $end1 = $interval1[1];\n    }\n    $intersection = $end1 - $start1;\n    if ($intersection == 0) {\n        return \"NO\";\n    }\n    if ($intersection == 1) {\n        return \"YES\";\n    }\n    if ($intersection == 2) {\n        return \"YES\";\n    }\n    if ($intersection == 3) {\n        return \"YES\";\n    }\n    if ($intersection == 4) {\n        return \"YES\";\n    }\n    if ($intersection == 5) {\n        return \"YES\";\n    }\n    if ($intersection == 6) {\n        return \"YES\";\n    }\n    if ($intersection == 7) {\n        return \"YES\";\n    }\n    if ($intersection == 8) {\n        return \"YES\";\n    }\n    if ($intersection == 9) {\n        return \"YES\";\n    }\n    if ($intersection == 10) {\n        return \"YES\";\n    }\n    if ($intersection == 11) {\n        return \"YES\";\n    }\n    if ($intersection == 12) {\n        return \"YES\";\n    }\n    if ($intersection == 13) {\n        return \"YES\";\n    }\n    if ($intersection == 14) {\n        return \"YES\";\n    }\n    if ($intersection == 15) {\n        return \"YES\";\n    }\n    if ($intersection == 16) {\n        return \"YES\";\n    }\n    if ($intersection == 17) {\n        return \"YES\";\n    }\n    if ($intersection == 18) {\n        return \"YES\";\n    }\n    if ($intersection == 19) {\n        return \"YES\";\n    }\n    if ($intersection == 20) {\n        return \"YES\";\n    }\n    if ($intersection == 21) {\n        return \"YES\";\n    }\n    if ($intersection =="}
{"task_id": "HumanEval/128", "completion": "\n    if (empty($arr)) {\n        return null;\n    }\n    $signs = array_map(function($x) {\n        return $x < 0? -1 : ($x > 0? 1 : 0);\n    }, $arr);\n    $prod = array_product($signs);\n    $sum = array_sum(array_map(function($x) {\n        return abs($x);\n    }, $arr));\n    return $prod * $sum;\n}"}
{"task_id": "HumanEval/129", "completion": "\n    $n = count($grid);\n    $m = count($grid[0]);\n    $dp = array_fill(0, $n, array_fill(0, $m, 0));\n    $dp[0][0] = $grid[0][0];\n    for ($i = 1; $i < $n; $i++) {\n        $dp[$i][0] = $dp[$i - 1][0] + $grid[$i][0];\n    }\n    for ($j = 1; $j < $m; $j++) {\n        $dp[0][$j] = $dp[0][$j - 1] + $grid[0][$j];\n    }\n    for ($i = 1; $i < $n; $i++) {\n        for ($j = 1; $j < $m; $j++) {\n            $dp[$i][$j] = min($dp[$i - 1][$j], $dp[$i][$j - 1]) + $grid[$i][$j];\n        }\n    }\n    $path = array();\n    $i = $n - 1;\n    $j = $m - 1;\n    for ($k = $k - 1; $k >= 0; $k--) {\n        if ($dp[$i][$j] == $dp[$i - 1][$j]) {\n            $i--;\n        } else {\n            $path[] = $grid[$i][$j];\n            $j--;\n        }\n    }\n    return array_reverse($path);\n}"}
{"task_id": "HumanEval/130", "completion": "\n    $result = [1, 3];\n    for ($i = 2; $i < $n; $i++) {\n        $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i - 3];\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/131", "completion": "\n    $digits = str_split($n);\n    $product = 1;\n    foreach ($digits as $digit) {\n        if ($digit % 2!== 0) {\n            $product *= $digit;\n        }\n    }\n    return $product;\n}"}
{"task_id": "HumanEval/132", "completion": "\n    $stack = [];\n    $string = str_split($string);\n    foreach ($string as $char) {\n        if ($char == '[') {\n            array_push($stack, $char);\n        } else if ($char == ']') {\n            if (count($stack) == 0) {\n                return false;\n            } else {\n                array_pop($stack);\n            }\n        }\n    }\n    return count($stack) == 0? true : false;\n}"}
{"task_id": "HumanEval/133", "completion": "\n    $sum = 0;\n    foreach ($lst as $num) {\n        $sum += pow(ceil($num), 2);\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/134", "completion": "\n    $txt = trim($txt);\n    $last_char = substr($txt, -1);\n    if (ctype_alpha($last_char) &&!ctype_alnum($last_char)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n"}
{"task_id": "HumanEval/135", "completion": "\n    $arr_len = count($arr);\n    $arr_max = max($arr);\n    $arr_min = min($arr);\n    $arr_min_index = array_search($arr_min, $arr);\n    $arr_max_index = array_search($arr_max, $arr);\n    if ($arr_min_index === false) {\n        return -1;\n    }\n    if ($arr_max_index === false) {\n        return -1;\n    }\n    if ($arr_min_index === 0) {\n        return $arr_max_index;\n    }\n    if ($arr_max_index === $arr_len - 1) {\n        return $arr_min_index;\n    }\n    if ($arr_min_index < $arr_max_index) {\n        return $arr_min_index;\n    }\n    return $arr_max_index;\n}"}
{"task_id": "HumanEval/136", "completion": "\n    $neg = null;\n    $pos = null;\n    foreach ($lst as $val) {\n        if ($val < 0) {\n            if ($neg === null || $neg < $val) {\n                $neg = $val;\n            }\n        } else if ($val > 0) {\n            if ($pos === null || $pos > $val) {\n                $pos = $val;\n            }\n        }\n    }\n    return array($neg, $pos);\n}"}
{"task_id": "HumanEval/137", "completion": "\n    if (is_numeric($a) && is_numeric($b)) {\n        return $a > $b? $a : $b;\n    } else if (is_numeric($a) &&!is_numeric($b)) {\n        return $a;\n    } else if (!is_numeric($a) && is_numeric($b)) {\n        return $b;\n    } else {\n        return null;\n    }\n}\n"}
{"task_id": "HumanEval/138", "completion": "\n    $sum = 0;\n    for ($i = 1; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $sum += $i;\n        }\n    }\n    return $sum == $n;\n}\n"}
{"task_id": "HumanEval/139", "completion": "\n    $factorial = 1;\n    for ($i = $n; $i > 0; $i--) {\n        $factorial *= $i;\n    }\n    return $factorial;\n}"}
{"task_id": "HumanEval/140", "completion": "\n    $text = preg_replace('/\\s+/', '_', $text);\n    $text = preg_replace('/_+/', '_', $text);\n    $text = preg_replace('/^_/', '', $text);\n    $text = preg_replace('/_$/', '', $text);\n    return $text;\n}\n"}
{"task_id": "HumanEval/141", "completion": "\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr) > 2) {\n        return 'No';\n    }\n    if (count($file_name_arr) < 2) {\n        return 'No';\n    }\n    if (strlen($file_name_arr[0]) > 3) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_arr[0][0])) {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n"}
{"task_id": "HumanEval/142", "completion": "\n    $sum = 0;\n    for ($i = 0; $i < count($lst); $i++) {\n        if ($i % 3 == 0 && $i % 4!= 0) {\n            $sum += $lst[$i] * $lst[$i];\n        } elseif ($i % 4 == 0 && $i % 3!= 0) {\n            $sum += $lst[$i] * $lst[$i] * $lst[$i];\n        }\n    }\n    return $sum;\n}\n"}
{"task_id": "HumanEval/143", "completion": "\n    $words = explode(\" \", $sentence);\n    $result = [];\n    foreach ($words as $word) {\n        if (is_prime(strlen($word))) {\n            $result[] = $word;\n        }\n    }\n    return implode(\" \", $result);\n}\n"}
{"task_id": "HumanEval/144", "completion": "\n    $x = explode('/', $x);\n    $n = explode('/', $n);\n    $x = $x[0] / $x[1];\n    $n = $n[0] / $n[1];\n    return $x * $n === (int)($x * $n);\n}"}
{"task_id": "HumanEval/145", "completion": "\n    $nums_sum = array();\n    foreach ($nums as $key => $value) {\n        $nums_sum[$key] = array_sum(str_split($value));\n    }\n    asort($nums_sum);\n    $result = array();\n    foreach ($nums_sum as $key => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/146", "completion": "\n    $count = 0;\n    foreach ($nums as $num) {\n        if ($num > 10 && $num % 10 == 1 && $num % 100!= 11) {\n            $count++;\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/147", "completion": "\n    $a = [];\n    for ($i = 1; $i <= $n; $i++) {\n        $a[] = $i * $i - $i + 1;\n    }\n    $count = 0;\n    for ($i = 0; $i < $n - 2; $i++) {\n        for ($j = $i + 1; $j < $n - 1; $j++) {\n            for ($k = $j + 1; $k < $n; $k++) {\n                if ($a[$i] + $a[$j] + $a[$k] % 3 == 0) {\n                    $count++;\n                }\n            }\n        }\n    }\n    return $count;\n}"}
{"task_id": "HumanEval/148", "completion": "\n    $planets = array(\"Mercury\", \"Venus\", \"Earth\", \"Mars\", \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\");\n    $result = array();\n    if (in_array($planet1, $planets) && in_array($planet2, $planets)) {\n        $index1 = array_search($planet1, $planets);\n        $index2 = array_search($planet2, $planets);\n        if ($index1 < $index2) {\n            for ($i = $index1 + 1; $i < $index2; $i++) {\n                $result[] = $planets[$i];\n            }\n        } else {\n            for ($i = $index1 - 1; $i > $index2; $i--) {\n                $result[] = $planets[$i];\n            }\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/149", "completion": "\n    $result = [];\n    foreach ($lst as $item) {\n        if (strlen($item) % 2 == 0) {\n            $result[] = $item;\n        }\n    }\n    sort($result);\n    return $result;\n}\n"}
{"task_id": "HumanEval/150", "completion": "\n    if ($n % 2 == 0) {\n        return $x;\n    } else {\n        return $y;\n    }\n}\n"}
{"task_id": "HumanEval/151", "completion": "\n    $sum = 0;\n    foreach ($lst as $num) {\n        if ($num % 2 == 1) {\n            $sum += $num * $num;\n        }\n    }\n    return $sum;\n}"}
{"task_id": "HumanEval/152", "completion": "\n    $result = [];\n    for ($i = 0; $i < count($game); $i++) {\n        $result[$i] = $game[$i] - $guess[$i];\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/153", "completion": "\n    $strengths = [];\n    foreach ($extensions as $extension) {\n        $strengths[] = str_count_chars($extension, 1)['u'] - str_count_chars($extension, 1)['l'];\n    }\n    $strengths = array_combine($extensions, $strengths);\n    arsort($strengths);\n    return $class_name. '.'. key($strengths);\n}"}
{"task_id": "HumanEval/154", "completion": "\n    $a = strtolower($a);\n    $b = strtolower($b);\n    $a_len = strlen($a);\n    $b_len = strlen($b);\n    if ($a_len < $b_len) {\n        return false;\n    }\n    for ($i = 0; $i < $a_len; $i++) {\n        if ($a[$i] === $b[0]) {\n            $match = true;\n            for ($j = 0; $j < $b_len; $j++) {\n                if ($a[$i + $j]!== $b[$j]) {\n                    $match = false;\n                    break;\n                }\n            }\n            if ($match) {\n                return true;\n            }\n        }\n    }\n    return false;\n}"}
{"task_id": "HumanEval/155", "completion": "\n    $even = 0;\n    $odd = 0;\n    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n        $num = $num / 10;\n    }\n    return array($even, $odd);\n}\n"}
{"task_id": "HumanEval/156", "completion": "\n    $roman_numerals = [\n        'M' => 1000,\n        'D' => 500,\n        'C' => 100,\n        'L' => 50,\n        'X' => 10,\n        'V' => 5,\n        'I' => 1\n    ];\n    $roman_numeral_string = '';\n    foreach ($roman_numerals as $roman_numeral => $value) {\n        while ($number >= $value) {\n            $roman_numeral_string.= $roman_numeral;\n            $number -= $value;\n        }\n    }\n    return $roman_numeral_string;\n}\n"}
{"task_id": "HumanEval/157", "completion": "\n    return ($a**2 + $b**2 == $c**2);\n}"}
{"task_id": "HumanEval/158", "completion": "\n    $max = 0;\n    $max_word = \"\";\n    foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n            $max_word = $word;\n        }\n    }\n    return $max_word;\n}"}
{"task_id": "HumanEval/159", "completion": "\n    $result = [];\n    $result[0] = $number + $need;\n    $result[1] = $remaining - $need;\n    if ($result[1] < 0) {\n        $result[1] = 0;\n    }\n    return $result;\n}\n"}
{"task_id": "HumanEval/160", "completion": "\n    $result = $operand[0];\n    for ($i = 1; $i < count($operand); $i++) {\n        switch ($operator[$i - 1]) {\n            case '+':\n                $result += $operand[$i];\n                break;\n            case '-':\n                $result -= $operand[$i];\n                break;\n            case '*':\n                $result *= $operand[$i];\n                break;\n            case '//':\n                $result = floor($result / $operand[$i]);\n                break;\n            case '**':\n                $result = pow($result, $operand[$i]);\n                break;\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/161", "completion": "\n    $result = \"\";\n    for ($i = 0; $i < strlen($s); $i++) {\n        if (ctype_alpha($s[$i])) {\n            $result.= strtoupper($s[$i]) === $s[$i]? strtolower($s[$i]) : strtoupper($s[$i]);\n        } else {\n            $result.= $s[$i];\n        }\n    }\n    return $result;\n}"}
{"task_id": "HumanEval/162", "completion": "\n    if (empty($text)) {\n        return null;\n    }\n    return md5($text);\n}\n"}
{"task_id": "HumanEval/163", "completion": "\n    $result = array();\n    for ($i = $a; $i <= $b; $i++) {\n        if ($i % 2 == 0) {\n            array_push($result, $i);\n        }\n    }\n    return $result;\n}"}
